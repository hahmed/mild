{
  "data": {
    "repository": {
      "description": "Ruby on Rails",
      "pullRequests": {
        "nodes": [
          {
            "additions": 20,
            "deletions": 1,
            "title": "Fix _read_attribute so it uses aliased attribute name as well",
            "body": "### Summary\r\n\r\nThe **read_attribute** method takes attribute_alias into consideration so **_read_attribute** should also do.\r\n\r\nFixes https://github.com/rails/rails/issues/45632.\r\n\r\n",
            "number": 45633,
            "url": "https://github.com/rails/rails/pull/45633",
            "updatedAt": "2022-07-28T20:26:08Z",
            "createdAt": "2022-07-21T15:39:29Z",
            "changedFiles": 3,
            "author": {
              "login": "tracyloisel"
            }
          },
          {
            "additions": 53,
            "deletions": 10,
            "title": "[ActiveRecord] ToSql#HomogeneousIn uses visitor pattern to produce Attribute sql",
            "body": "### Summary\r\n\r\nIn `ToSql`, operators that generate the sql for an `Attribute` use `visit(o.left, collector)`\r\nThis can be seen in `Equality` (and friends), `Case`, `SelectStatement`, and `In`.\r\n\r\n\r\n### Before\r\n\r\n`HomogeneousIn` manually produces the sql for an `Attribute`, introduced in 72fd0bae\r\n\r\nTo get this to work, knowledge of attributes and table aliases need to be in the node.\r\n\r\n### After\r\n\r\nThis change makes `HomogeneousIn` follow the pattern by delegating to `ToSql#Attribute`.\r\n\r\n### Why\r\n\r\nOur code base uses `Arel` on the left hand of the `where()` clauses. This change lets it flow nicely.\r\n\r\nIt is also amusing that `Homogeneous`-`In` is not consistent with the other operators, including the forked parent `In`.\r\n\r\nThis added consistency allows for more flexible and diverse sql generation.\r\n\r\n## Slightly tweaked code examples\r\n\r\nThis code has been simplified to help illuminate the need for the change.\r\n\r\n```ruby\r\ndef visit_Arel_Nodes_In(o, collector)\r\n  collector.preparable = false\r\n\r\n  ### using visit\r\n  visit(o.left, collector) << \" IN (\"\r\n  visit(o.right, collector) << \")\"\r\nend\r\n\r\ndef visit_Arel_Nodes_Equality(o, collector)\r\n  ### using visit\r\n  visit o.left, collector\r\n\r\n  if o.right.nil?\r\n    collector << \" IS NULL\"\r\n  else\r\n    collector << \" = \"\r\n    visit o.right, collector\r\n  end\r\nend\r\n\r\ndef visit_Arel_Attributes_Attribute(o, collector)\r\n  join_name = o.relation.table_alias || o.relation.name\r\n  collector << quote_table_name(join_name) << \".\" << quote_column_name(o.name)\r\nend\r\n\r\ndef visit_Arel_Nodes_HomogeneousIn(o, collector)\r\n  collector.preparable = false\r\n\r\n  # before: not using visit, but partially recreating Attribute instead\r\n  collector << quote_table_name(o.table_name) << \".\" << quote_column_name(o.column_name)\r\n  # after:\r\n  # visit o.left, collector\r\n\r\n  collector << \" IN (\"\r\n\r\n  values = o.casted_values\r\n  collector.add_binds(values, o.proc_for_binds, &bind_block)\r\n\r\n  collector << \")\"\r\nend\r\n\r\n```",
            "number": 45642,
            "url": "https://github.com/rails/rails/pull/45642",
            "updatedAt": "2022-09-01T19:08:27Z",
            "createdAt": "2022-07-22T18:32:23Z",
            "changedFiles": 3,
            "author": {
              "login": "kbrock"
            }
          },
          {
            "additions": 5,
            "deletions": 6,
            "title": "[ci-skip] Fix documentation on `accessed_fields` method.",
            "body": "Change `ActionController::Base` -> `ApplicationController`, on the usage\r\nexample.",
            "number": 45650,
            "url": "https://github.com/rails/rails/pull/45650",
            "updatedAt": "2022-07-26T10:52:17Z",
            "createdAt": "2022-07-24T11:54:43Z",
            "changedFiles": 1,
            "author": {
              "login": "dixpac"
            }
          },
          {
            "additions": 15,
            "deletions": 0,
            "title": "Add SQL function UPPER to Arel::FactoryMethods",
            "body": "This mirrors the LOWER function that already exists.\r\n\r\nThis SQL function is useful for string fields but also for PostgreSQL\r\nrange fields where UPPER returns the upper bound of the range.",
            "number": 45651,
            "url": "https://github.com/rails/rails/pull/45651",
            "updatedAt": "2022-07-24T20:11:14Z",
            "createdAt": "2022-07-24T16:10:51Z",
            "changedFiles": 3,
            "author": {
              "login": "jdufresne"
            }
          },
          {
            "additions": 75,
            "deletions": 7,
            "title": "YAML serialization options",
            "body": "### Summary\r\n\r\nAllow setting YAML serialization options on a per attribute basis – along\r\nwith application wide setting.\r\n\r\n- Permit YAML classes per attribute (`serialize :content, yaml: { permitted_classes: [Symbol] }`)\r\n- Permit YAML unsafe load per attribute (`serialize :content, yaml: { unsafe_load: true }`)\r\n\r\n\r\n### Other Information\r\n\r\nRails' versions 7.0.3.1, 6.1.6.1, 6.0.5.1, and 5.2.8.1 introduced application\r\nwide setting to allow unsafe YAML load, along with a global permitted classes\r\nsetting. This PR intends to add such options on a per attribute basis, so\r\nupdating to the new behavior can be done incrementally, while also providing\r\nmore flexibility when allowing YAML to load classes.\r\n\r\n<!-- If there's anything else that's important and relevant to your pull\r\nrequest, mention that information here. This could include\r\nbenchmarks, or other information.\r\n\r\nIf you are updating any of the CHANGELOG files or are asked to update the\r\nCHANGELOG files by reviewers, please add the CHANGELOG entry at the top of the file.\r\n\r\nFinally, if your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n-->\r\n",
            "number": 45660,
            "url": "https://github.com/rails/rails/pull/45660",
            "updatedAt": "2022-09-02T14:00:35Z",
            "createdAt": "2022-07-25T19:18:59Z",
            "changedFiles": 4,
            "author": {
              "login": "xjunior"
            }
          },
          {
            "additions": 41,
            "deletions": 27,
            "title": "Ensure pipe is closed after test run",
            "body": "### Summary\r\n\r\n<!-- Provide a general description of the code changes in your pull\r\nrequest... were there any bugs you had fixed? If so, mention them. If\r\nthese bugs have open GitHub issues, be sure to tag them here as well,\r\nto keep the conversation linked together. -->\r\n\r\n`Forking.run_in_isolation` opens two ends of a pipe. The fork process closes the read end, writes to it, and then terminates (which presumably closes the file descriptors on its end). The parent process closes the write end, reads from it, and returns, never closing the read end.\r\n\r\nThis results in an accumulation of open file descriptors, which can cause errors if the limit is reached.\r\n\r\nOne approach to fixing this would be to simply close the read end of the pipe in the parent process. However, it is more idiomatic to open the pipe given a block, which automatically closes the pipe after the block exits.\r\n\r\n### Other Information\r\n\r\n<!-- If there's anything else that's important and relevant to your pull\r\nrequest, mention that information here. This could include\r\nbenchmarks, or other information.\r\n\r\nIf you are updating any of the CHANGELOG files or are asked to update the\r\nCHANGELOG files by reviewers, please add the CHANGELOG entry at the top of the file.\r\n\r\nFinally, if your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n-->\r\n\r\nI hope my explanation above is correct. Multiple processes, pipes, and file descriptors are outside my usual area of expertise.\r\n\r\nI noticed this while working on #45664. While trying to run tests, I would inevitably run into an error whereby the test suite would terminate abruptly part way through due to `Too many open files (Errno::EMFILE)`, requiring me to re-run the command repeatedly until the randomized test order meant that the test I cared about had run before the crash.\r\n\r\n<details><summary>Example error output</summary>\r\n\r\nNote the following output is somewhat interleaved, due to coming from multiple processes.\r\n\r\n```\r\nsambostock@sams-m1-mbp railties % bundle exec rake test:regular TEST=test/application/configuration_test.rb TESTOPTS=\"--verbose\"\r\n...\r\nApplicationTests::ConfigurationTest#test_Rails.application_is_nil_until_app_is_initialized = 0.55 s = .\r\nApplicationTests::ConfigurationTest#test_Digest::UUID.use_rfc4122_namespaced_uuids_is_disabled_by_default_for_upgraded_apps = 0.59 s = .\r\nApplicationTests::ConfigurationTest#test_config.active_record.use_yaml_unsafe_load_is_false_by_default = 0.56 s = .\r\n#<Thread:0x000000010a134560 /Users/sambostock/.gem/ruby/3.1.0/gems/minitest-5.16.1/lib/minitest/parallel.rb:28 run> terminated with exception (report_on_exception is true):\r\n/Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:28:in `pipe': Too many open files (Errno::EMFILE)\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:28:in `run_in_isolation'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:19:in `run'\r\n\tfrom /Users/sambostock/.gem/ruby/3.1.0/gems/minitest-5.16.1/lib/minitest.rb:1059:in `run_one_method'\r\n\tfrom /Users/sambostock/.gem/ruby/3.1.0/gems/minitest-5.16.1/lib/minitest/parallel.rb:33:in `block (2 levels) in start'\r\nApplicationTests::ConfigurationTest#test_application_verifier_can_build_different_verifiers = 0.31 s = .\r\n/Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:28:in `pipe': Too many open files (Errno::EMFILE)\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:28:in `run_in_isolation'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:19:in `run'\r\n\tfrom /Users/sambostock/.gem/ruby/3.1.0/gems/minitest-5.16.1/lib/minitest.rb:1059:in `run_one_method'\r\n\tfrom /Users/sambostock/.gem/ruby/3.1.0/gems/minitest-5.16.1/lib/minitest/parallel.rb:33:in `block (2 levels) in start'\r\nrake aborted!\r\nCommand failed with status (1): [ruby -w -I\"lib:test:/Users/sambostock/src/github.com/sambostock/rails/railties/../activesupport/lib\" /opt/rubies/3.1/lib/ruby/gems/3.1.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb \"test/application/configuration_test.rb\" --verbose]\r\n/Users/sambostock/.gem/ruby/3.1.0/gems/bundler-2.3.14/lib/bundler/cli/exec.rb:58:in `load'\r\n/Users/sambostock/.gem/ruby/3.1.0/gems/bundler-2.3.14/lib/bundler/cli/exec.rb:58:in `kernel_load'\r\n/Users/sambostock/.gem/ruby/3.1.0/gems/bundler-2.3.14/lib/bundler/cli/exec.rb:23:in `run'\r\n/Users/sambostock/.gem/ruby/3.1.0/gems/bundler-2.3.14/lib/bundler/cli.rb:483:in `exec'\r\n/Users/sambostock/.gem/ruby/3.1.0/gems/bundler-2.3.14/lib/bundler/vendor/thor/lib/thor/command.rb:27:in `run'\r\n/Users/sambostock/.gem/ruby/3.1.0/gems/bundler-2.3.14/lib/bundler/vendor/thor/lib/thor/invocation.rb:127:in `invoke_command'\r\n/Users/sambostock/.gem/ruby/3.1.0/gems/bundler-2.3.14/lib/bundler/vendor/thor/lib/thor.rb:392:in `dispatch'\r\n/Users/sambostock/.gem/ruby/3.1.0/gems/bundler-2.3.14/lib/bundler/cli.rb:31:in `dispatch'\r\n/Users/sambostock/.gem/ruby/3.1.0/gems/bundler-2.3.14/lib/bundler/vendor/thor/lib/thor/base.rb:485:in `start'\r\n/Users/sambostock/.gem/ruby/3.1.0/gems/bundler-2.3.14/lib/bundler/cli.rb:25:in `start'\r\n/Users/sambostock/.gem/ruby/3.1.0/gems/bundler-2.3.14/exe/bundle:48:in `block in <top (required)>'\r\n/Users/sambostock/.gem/ruby/3.1.0/gems/bundler-2.3.14/lib/bundler/friendly_errors.rb:103:in `with_friendly_errors'\r\n/Users/sambostock/.gem/ruby/3.1.0/gems/bundler-2.3.14/exe/bundle:36:in `<top (required)>'\r\n/Users/sambostock/.gem/ruby/3.1.0/bin/bundle:25:in `load'\r\n/Users/sambostock/.gem/ruby/3.1.0/bin/bundle:25:in `<main>'\r\nTasks: TOP => test:regular\r\n(See full trace by running task with --trace)\r\nsambostock@sams-m1-mbp railties % /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:52:in `write': Broken pipe (Errno::EPIPE)\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:52:in `puts'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:52:in `block in run_in_isolation'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:32:in `fork'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:32:in `run_in_isolation'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:19:in `run'\r\n\tfrom /Users/sambostock/.gem/ruby/3.1.0/gems/minitest-5.16.1/lib/minitest.rb:1059:in `run_one_method'\r\n\tfrom /Users/sambostock/.gem/ruby/3.1.0/gems/minitest-5.16.1/lib/minitest/parallel.rb:33:in `block (2 levels) in start'\r\n/Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:52:in `write': Broken pipe (Errno::EPIPE)\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:52:in `puts'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:52:in `block in run_in_isolation'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:32:in `fork'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:32:in `run_in_isolation'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:19:in `run'\r\n\tfrom /Users/sambostock/.gem/ruby/3.1.0/gems/minitest-5.16.1/lib/minitest.rb:1059:in `run_one_method'\r\n\tfrom /Users/sambostock/.gem/ruby/3.1.0/gems/minitest-5.16.1/lib/minitest/parallel.rb:33:in `block (2 levels) in start'\r\n/Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:52:in `write': Broken pipe (Errno::EPIPE)\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:52:in `puts'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:52:in `block in run_in_isolation'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:32:in `fork'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:32:in `run_in_isolation'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:19:in `run'\r\n\tfrom /Users/sambostock/.gem/ruby/3.1.0/gems/minitest-5.16.1/lib/minitest.rb:1059:in `run_one_method'\r\n\tfrom /Users/sambostock/.gem/ruby/3.1.0/gems/minitest-5.16.1/lib/minitest/parallel.rb:33:in `block (2 levels) in start'\r\n/Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:52:in `write': Broken pipe (Errno::EPIPE)\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:52:in `puts'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:52:in `block in run_in_isolation'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:32:in `fork'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:32:in `run_in_isolation'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:19:in `run'\r\n\tfrom /Users/sambostock/.gem/ruby/3.1.0/gems/minitest-5.16.1/lib/minitest.rb:1059:in `run_one_method'\r\n\tfrom /Users/sambostock/.gem/ruby/3.1.0/gems/minitest-5.16.1/lib/minitest/parallel.rb:33:in `block (2 levels) in start'\r\n/Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:52:in `write': Broken pipe (Errno::EPIPE)\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:52:in `puts'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:52:in `block in run_in_isolation'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:32:in `fork'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:32:in `run_in_isolation'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:19:in `run'\r\n\tfrom /Users/sambostock/.gem/ruby/3.1.0/gems/minitest-5.16.1/lib/minitest.rb:1059:in `run_one_method'\r\n\tfrom /Users/sambostock/.gem/ruby/3.1.0/gems/minitest-5.16.1/lib/minitest/parallel.rb:33:in `block (2 levels) in start'\r\n/Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:52:in `write': Broken pipe (Errno::EPIPE)\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:52:in `puts'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:52:in `block in run_in_isolation'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:32:in `fork'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:32:in `run_in_isolation'\r\n\tfrom /Users/sambostock/src/github.com/sambostock/rails/activesupport/lib/active_support/testing/isolation.rb:19:in `run'\r\n\tfrom /Users/sambostock/.gem/ruby/3.1.0/gems/minitest-5.16.1/lib/minitest.rb:1059:in `run_one_method'\r\n\tfrom /Users/sambostock/.gem/ruby/3.1.0/gems/minitest-5.16.1/lib/minitest/parallel.rb:33:in `block (2 levels) in start'\r\n```\r\n\r\n</details>\r\n\r\nHaving failed to figure out how to run individual tests, I eventually got frustrated enough to investigate... 😅 \r\n\r\nSo far, with this change, I have been unable to reproduce the error. :tada:",
            "number": 45667,
            "url": "https://github.com/rails/rails/pull/45667",
            "updatedAt": "2022-07-27T16:05:34Z",
            "createdAt": "2022-07-27T04:50:31Z",
            "changedFiles": 2,
            "author": {
              "login": "sambostock"
            }
          },
          {
            "additions": 63,
            "deletions": 1,
            "title": "Detect colliding keys in Active Job Hash serialization",
            "body": "### Summary\r\n\r\n<!-- Provide a general description of the code changes in your pull\r\nrequest... were there any bugs you had fixed? If so, mention them. If\r\nthese bugs have open GitHub issues, be sure to tag them here as well,\r\nto keep the conversation linked together. -->\r\n\r\nActiveJob serializes `Symbol` `Hash` keys by stringifying them, and storing an array of keys to be symbolized on deserialization as `_aj_symbol_keys`. This means that if a `Hash` has both `Symbol` and `String` keys with the same contents, they will collide.\r\n\r\nSpecifically, the resulting hash ends up containing only a pair consisting of:\r\n- the symbol key\r\n- the last value\r\n\r\nThis PR adds a check for this and logs a deprecation warning. It also introduces a setting to `raise` instead of logging the warning, with the intention of making this behavior the default in Rails 7.2/8.0.\r\n\r\n### Other Information\r\n\r\n<!-- If there's anything else that's important and relevant to your pull\r\nrequest, mention that information here. This could include\r\nbenchmarks, or other information.\r\n\r\nIf you are updating any of the CHANGELOG files or are asked to update the\r\nCHANGELOG files by reviewers, please add the CHANGELOG entry at the top of the file.\r\n\r\nFinally, if your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n-->\r\n\r\nI have left a number of placeholders for the time being, because I wanted to get initial review and confirm we want to do this, before investing the time to write the docs, deprecation message, changelog, etc.\r\n\r\n---\r\ncc. @mangara, who mentioned this in Slack",
            "number": 45676,
            "url": "https://github.com/rails/rails/pull/45676",
            "updatedAt": "2022-07-28T07:38:01Z",
            "createdAt": "2022-07-28T07:37:57Z",
            "changedFiles": 6,
            "author": {
              "login": "sambostock"
            }
          },
          {
            "additions": 31,
            "deletions": 1,
            "title": "Allow hosts redirects from `hosts` Rails configuration",
            "body": "### Summary\r\n\r\n<!-- Provide a general description of the code changes in your pull\r\nrequest... were there any bugs you had fixed? If so, mention them. If\r\nthese bugs have open GitHub issues, be sure to tag them here as well,\r\nto keep the conversation linked together. -->\r\n\r\nWe use Rails with multiple domains (and subdomains). All these domains are configured with `config.hosts`.  \r\nSometimes we have dynamic redirect from one domain to an other.  \r\nAnd `ActionController::Redirecting::UnsafeRedirectError` is raised.\r\n\r\nIt would be great to allow redirections to domains that the app accept in `config.hosts`.\r\nThis should not be considered as unsafe.\r\n\r\n### Other Information\r\n\r\n<!-- If there's anything else that's important and relevant to your pull\r\nrequest, mention that information here. This could include\r\nbenchmarks, or other information.\r\n\r\nIf you are updating any of the CHANGELOG files or are asked to update the\r\nCHANGELOG files by reviewers, please add the CHANGELOG entry at the top of the file.\r\n\r\nFinally, if your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n-->\r\n",
            "number": 45680,
            "url": "https://github.com/rails/rails/pull/45680",
            "updatedAt": "2022-10-10T11:00:47Z",
            "createdAt": "2022-07-28T11:27:45Z",
            "changedFiles": 4,
            "author": {
              "login": "Kevinrob"
            }
          },
          {
            "additions": 77,
            "deletions": 0,
            "title": "Add a build persistence method",
            "body": "### Summary\r\n\r\nProvides a wrapper for `new`, to provide feature parity with `create`s\r\nability to create multiple records from an array of hashes, using the\r\nsame notation as the `build` method on associations.\r\n\r\n- Associations can create multiple objects from an array of hashes\r\n- Associations can build multiple objects from an array of hashes\r\n- Classes can create multiple objects from an array of hashes\r\n- Classes can build multiple objects from an array of hashes (<- You are here)\r\n\r\nAs discussed here: https://discuss.rubyonrails.org/t/allow-activerecord-inheritance-new-to-accept-an-array/80889\r\n",
            "number": 45696,
            "url": "https://github.com/rails/rails/pull/45696",
            "updatedAt": "2022-10-26T19:38:43Z",
            "createdAt": "2022-07-29T14:58:11Z",
            "changedFiles": 3,
            "author": {
              "login": "seand7565"
            }
          },
          {
            "additions": 26,
            "deletions": 7,
            "title": "Support using a method name to define the `ActiveSupport::CurrentAttributes.resets` callback",
            "body": "Previously you could only use a block, which was inconsistent with other callback APIs in Rails. Now, you can use a block or a method name. The block API is still recommended in the docs. So now these do the same thing:\r\n\r\n```ruby\r\nclass CurrentWithBlock < ActiveSupport::CurrentAttributes\r\n  resets { Time.zone = nil }\r\nend\r\n\r\nclass CurrentWithMethod < ActiveSupport::CurrentAttributes\r\n  resets :clear_time_zone\r\n\r\n  def clear_time_zone\r\n    Time.zone = nil\r\n  end\r\nend\r\n```\r\n\r\nThis also works for `before_reset`.\r\n\r\n```ruby\r\nclass Current < ActiveSupport::CurrentAttributes\r\n  before_reset :clear_time_zone\r\nend\r\n```\r\n",
            "number": 45698,
            "url": "https://github.com/rails/rails/pull/45698",
            "updatedAt": "2022-10-06T07:48:30Z",
            "createdAt": "2022-07-29T16:19:12Z",
            "changedFiles": 3,
            "author": {
              "login": "ghiculescu"
            }
          },
          {
            "additions": 89,
            "deletions": 0,
            "title": "Add explicit regression tests for ActiveRecord::Migration's #say & #say_with_time",
            "body": "related tests are in activerecord/test/cases/migrator_test.rb, but it checks puts(message_count) quantity only.\r\n\r\n### Summary\r\n\r\nI noticed that Migration's `#say` and `#say_with_time` methods didn't have explicit tests so this should increase test coverage a little bit.\r\n\r\nOther than that(in the 2nd commit), after this update it fails with an explicit error in case #say_with_time was called without a block. I wasn't sure whether to put it in this PR or probably a future one.\r\nLMKWYT",
            "number": 45705,
            "url": "https://github.com/rails/rails/pull/45705",
            "updatedAt": "2022-07-31T17:13:42Z",
            "createdAt": "2022-07-30T16:19:17Z",
            "changedFiles": 2,
            "author": {
              "login": "nfedyashev"
            }
          },
          {
            "additions": 95,
            "deletions": 18,
            "title": "Support distributed preloading calls",
            "body": "This PR is split into two commits.\r\n\r\nThe 1st commit allows records from already-loaded relations to be used when performing post-hoc preloads of downstream associations.\r\n\r\nThe 2nd commit modifies the `Preloader` to track preloaded associations in buckets, and, when preloading a downstream association, to preload that association for all owner records from the same bucket.\r\n\r\nThe goal of this PR is to allow individual `includes` and `preload` calls to be placed alongside the code that depends on them.  This makes it easier to add a preload when needed or remove a preload when it is no longer needed.\r\n\r\nConsider the following code:\r\n\r\n```ruby\r\ndef render_posts(posts)\r\n  posts.includes(:comments).each do |post|\r\n    post.comments.each do |comment|\r\n      # ...\r\n    end\r\n  end\r\nend\r\n\r\ndef render_authors(authors)\r\n  authors.includes(:posts).each do |author|\r\n    render_posts(author.posts)\r\n  end\r\nend\r\n\r\nrender_authors(Author.all)\r\n```\r\n\r\nBefore the 1st commit, with N authors each having at least 1 post, the code would execute 2N + 2 queries.  For example, with 5 authors:\r\n\r\n```\r\nSELECT \"authors\".* FROM \"authors\"\r\nSELECT \"posts\".* FROM \"posts\" WHERE \"posts\".\"author_id\" IN (?, ?, ?, ?, ?)  [[\"author_id\", 1], [\"author_id\", 2], [\"author_id\", 3], [\"author_id\", 4], [\"author_id\", 5]]\r\nSELECT \"posts\".* FROM \"posts\" WHERE \"posts\".\"author_id\" = ?  [[\"author_id\", 1]]\r\nSELECT \"comments\".* FROM \"comments\" WHERE \"comments\".\"post_id\" = ?  [[\"post_id\", 11]]\r\nSELECT \"posts\".* FROM \"posts\" WHERE \"posts\".\"author_id\" = ?  [[\"author_id\", 2]]\r\nSELECT \"comments\".* FROM \"comments\" WHERE \"comments\".\"post_id\" = ?  [[\"post_id\", 12]]\r\nSELECT \"posts\".* FROM \"posts\" WHERE \"posts\".\"author_id\" = ?  [[\"author_id\", 3]]\r\nSELECT \"comments\".* FROM \"comments\" WHERE \"comments\".\"post_id\" = ?  [[\"post_id\", 13]]\r\nSELECT \"posts\".* FROM \"posts\" WHERE \"posts\".\"author_id\" = ?  [[\"author_id\", 4]]\r\nSELECT \"comments\".* FROM \"comments\" WHERE \"comments\".\"post_id\" = ?  [[\"post_id\", 14]]\r\nSELECT \"posts\".* FROM \"posts\" WHERE \"posts\".\"author_id\" = ?  [[\"author_id\", 5]]\r\nSELECT \"comments\".* FROM \"comments\" WHERE \"comments\".\"post_id\" = ?  [[\"post_id\", 15]]\r\n```\r\n\r\nAfter the 1st commit, the code executes N + 2 queries:\r\n\r\n```\r\nSELECT \"authors\".* FROM \"authors\"\r\nSELECT \"posts\".* FROM \"posts\" WHERE \"posts\".\"author_id\" IN (?, ?, ?, ?, ?)  [[\"author_id\", 1], [\"author_id\", 2], [\"author_id\", 3], [\"author_id\", 4], [\"author_id\", 5]]\r\nSELECT \"comments\".* FROM \"comments\" WHERE \"comments\".\"post_id\" = ?  [[\"post_id\", 11]]\r\nSELECT \"comments\".* FROM \"comments\" WHERE \"comments\".\"post_id\" = ?  [[\"post_id\", 12]]\r\nSELECT \"comments\".* FROM \"comments\" WHERE \"comments\".\"post_id\" = ?  [[\"post_id\", 13]]\r\nSELECT \"comments\".* FROM \"comments\" WHERE \"comments\".\"post_id\" = ?  [[\"post_id\", 14]]\r\nSELECT \"comments\".* FROM \"comments\" WHERE \"comments\".\"post_id\" = ?  [[\"post_id\", 15]]\r\n```\r\n\r\nAfter the 2nd commit, the code executes 3 queries:\r\n\r\n```\r\nSELECT \"authors\".* FROM \"authors\"\r\nSELECT \"posts\".* FROM \"posts\" WHERE \"posts\".\"author_id\" IN (?, ?, ?, ?, ?)  [[\"author_id\", 1], [\"author_id\", 2], [\"author_id\", 3], [\"author_id\", 4], [\"author_id\", 5]]\r\nSELECT \"comments\".* FROM \"comments\" WHERE \"comments\".\"post_id\" IN (?, ?, ?, ?, ?)  [[\"post_id\", 11], [\"post_id\", 12], [\"post_id\", 13], [\"post_id\", 14], [\"post_id\", 15]]\r\n```\r\n\r\nRelated: #45161, #45413, #45231.  The primary difference of this PR is that users must still opt in to preloading via `includes` or `preload`.  The intent is to allow fine-grained control over when preloading happens, but to make cascading automatic.\r\n",
            "number": 45724,
            "url": "https://github.com/rails/rails/pull/45724",
            "updatedAt": "2022-08-22T13:54:42Z",
            "createdAt": "2022-08-01T18:56:46Z",
            "changedFiles": 10,
            "author": {
              "login": "jonathanhefner"
            }
          },
          {
            "additions": 3,
            "deletions": 1,
            "title": "Allow upgrade to rack 3.0",
            "body": "Should we add Rack 3 to the text matrix? It's not released yet but will be soon, in the mean time you can get it from `git: \"https://github.com/rack/rack\"`.",
            "number": 45741,
            "url": "https://github.com/rails/rails/pull/45741",
            "updatedAt": "2022-09-10T17:47:58Z",
            "createdAt": "2022-08-03T05:39:37Z",
            "changedFiles": 2,
            "author": {
              "login": "ioquatix"
            }
          },
          {
            "additions": 13,
            "deletions": 67,
            "title": "Action View: use a local variable to hold the template buffer",
            "body": "This isn't quite working yet, there is a case failing with Builder. I'll get back to it tomorrow but opening a draft now in case someone may have early feedback or ideas. (cc @jhawthorn, @BlakeWilliams)\r\n\r\nThe one failing test is:\r\n\r\n```ruby\r\n# hello_world_container.builder\r\nxml.test do\r\n  render partial: \"hello\", locals: { xm: xml }\r\nend\r\n```\r\n\r\nThe above test rely on `render` concatenating directly into the buffer, while in most other cases we rely on the return value of `render`. The whole thing is quite confusing and I'm not quite sure still how it even work.\r\n\r\nBut the idea is that if we no longer swap the buffer in `@output_buffer` we can now reference it using the local variable instead of the instance variable.\r\n\r\nIf we manage to make this work, it would open the door to further optimizations such as Eruby's `chain_appends`.\r\n\r\n",
            "number": 45749,
            "url": "https://github.com/rails/rails/pull/45749",
            "updatedAt": "2022-08-08T10:03:32Z",
            "createdAt": "2022-08-03T15:03:47Z",
            "changedFiles": 5,
            "author": {
              "login": "casperisfine"
            }
          },
          {
            "additions": 130,
            "deletions": 60,
            "title": "Factor out `validates_secure_password`",
            "body": "Follow-up to #45487, which was reverted by #45753.\r\n\r\nThis factors `validates_secure_password` out of `has_secure_password`, to provide an API for conditionally requiring a password.  For example:\r\n\r\n  ```ruby\r\n  class Account\r\n    include ActiveModel::SecurePassword\r\n\r\n    attr_accessor :is_guest, :password_digest\r\n\r\n    has_secure_password validations: false\r\n    validates_secure_password unless: :is_guest\r\n  end\r\n\r\n  account = Account.new\r\n  account.valid? # => false, password required\r\n\r\n  account.is_guest = true\r\n  account.valid? # => true\r\n  ```\r\n\r\n---\r\n\r\n/cc @liljack, @dhh\r\n",
            "number": 45755,
            "url": "https://github.com/rails/rails/pull/45755",
            "updatedAt": "2022-09-21T13:28:12Z",
            "createdAt": "2022-08-03T21:21:10Z",
            "changedFiles": 3,
            "author": {
              "login": "jonathanhefner"
            }
          },
          {
            "additions": 254,
            "deletions": 20,
            "title": "Add `:save_history` option to `stream_from`",
            "body": "## Summary\r\nThis PR is motivated by this [RailsConf talk](https://youtu.be/TgpSs2ffJL0) from @palkan, where he discusses message delivery guarantees in real-time Rails applications.\r\n\r\nSince the beginning, ActionCable rely on [Redis PubSub](https://redis.io/docs/manual/pubsub/) to create channels of communication between the server and the client. The purpose of a PubSub is solely to broadcast messages to multiple subscribers, not to make sure that they receive them. It means that if the network connection is lost for some reason, the subscriber will not be able to receive messages sent during their absence. If the subscriber is able to reconnect, they will have an inconsistent state if they don't refresh the page, thus killing the real-time experience.\r\n\r\nTo solve this problem we can use Redis PubSub in combination with [Redis Streams](https://redis.io/docs/manual/data-types/streams/). With Redis Streams, we can keep track of the messages sent by the server and retrieve the history when needed, using a timestamp that corresponds to the last time the subscriber received a message from the server. This is easily achievable because Redis Streams uses timestamps as [IDs](https://redis.io/docs/manual/data-types/streams/#entry-ids).\r\n\r\nThe approach taken in this PR is to add a `:save_history` option to `stream_from`. This option takes a boolean or a hash with the `:key`  attribute to set a custom Redis key for the stream history (I'm also considering adding an `:expires_in` option).\r\n\r\nIf this option is enabled, subscribers will request the history of messages sent in their absence, after each reconnect:\r\n![streams_history](https://user-images.githubusercontent.com/47113995/182995620-9a26ef4c-427e-4ac8-a455-060c2aabe90e.gif)\r\n\r\n## Tasks\r\n- [ ] Write tests\r\n- [ ] Write documentation\r\n\r\n<!-- If you are updating any of the CHANGELOG files or are asked to update the\r\nCHANGELOG files by reviewers, please add the CHANGELOG entry at the top of the file.\r\n\r\nFinally, if your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n-->\r\n",
            "number": 45764,
            "url": "https://github.com/rails/rails/pull/45764",
            "updatedAt": "2022-10-10T17:39:48Z",
            "createdAt": "2022-08-05T01:52:43Z",
            "changedFiles": 12,
            "author": {
              "login": "mansakondo"
            }
          },
          {
            "additions": 517,
            "deletions": 3,
            "title": "Add support for managing collations in PostgreSQL",
            "body": "### Summary\r\n\r\nAdd support for managing collations in PostgreSQL.\r\n\r\nhttps://www.postgresql.org/docs/current/collation.html\r\n\r\nAdd `collations`, `create_collation`, and `drop_collation` to\r\n`PostgreSQLAdapter`, and `AbstractAdapter` as empty methods. There is\r\nexisting support for collations but only as a column modifier. A simple use\r\ncase is adding a case-insensitive string field. In the past, we might have\r\ndowncased on save, but then you'd need to remember to make your uniqueness\r\nconstraint case-insensitive and to downcase on find, search, etc. We might\r\nhave used `citext`, a module that must be installed. Current PostgreSQL\r\ndocumentation tells us to \"Consider using nondeterministic collations\".\r\n\r\n```ruby\r\nclass CreateUsers < ActiveRecord::Migration[7.1]\r\n  def change\r\n    create_collation \"case_insensitive\",\r\n      provider: \"icu\",\r\n      locale: \"und-u-ks-level2\",\r\n      deterministic: false\r\n\r\n    create_collation \"ignore_accents\",\r\n      provider: \"icu\",\r\n      locale: \"und-u-ks-level1-kc-true\",\r\n      deterministic: false\r\n\r\n    create_table :users do |t|\r\n      t.string :email, collation: \"case_insensitive\"\r\n      t.string :name, collation: \"ignore_accents\"\r\n      t.timestamps\r\n    end\r\n    add_index :users, :email, unique: true\r\n  end\r\nend\r\n\r\nActiveRecord::Base.connection.collations\r\n# [\"case_insensitive\", \"ignore_accents\"]\r\n\r\nUser.create!(email: \"dan@example.com\", name: \"dan\")\r\n# works\r\n\r\nUser.create!(email: \"DAN@example.com\", name: \"dan\")\r\n# raises ActiveRecord::RecordNotUnique\r\n\r\nclass User < ApplicationRecord\r\n  validates :email, uniqueness: true\r\nend\r\n# uniqueness validations just work\r\n\r\nUser.create!(email: \"DAN@example.com\", name: \"dan\")\r\n# raises ActiveRecord::RecordInvalid\r\n\r\nActiveRecord::Base.connection.drop_collation \"case_insensitive\",\r\n  provider: \"icu\", locale: \"und-u-ks-level2\", deterministic: false\r\n# raises ActiveRecord::StatementInvalid because of the email column\r\n```\r\n\r\n### Other Information\r\n\r\nPrevents needing `structure.sql` just for collations.\r\nI wrote `drop_collation` to always be rollback safe.\r\nTo keep things simple, I chose not to add 2 things:\r\n- a `:from` option on `create_collation` - I think this is less likely to be used\r\n- a `:force` option on `drop_collation` - dangerous and less likely to be used\r\n",
            "number": 45776,
            "url": "https://github.com/rails/rails/pull/45776",
            "updatedAt": "2022-08-09T11:59:14Z",
            "createdAt": "2022-08-05T18:36:36Z",
            "changedFiles": 14,
            "author": {
              "login": "daniel-bryant"
            }
          },
          {
            "additions": 15,
            "deletions": 6,
            "title": "[AR] Fix result with anonymous PG columns of different type from json",
            "body": "Fix #45758 \r\n\r\nUpdates ActiveRecord PostgreSQL adapter and ActiveRecord::Result to handle DB result with no-name columns (`?column?`) of different type.\r\n\r\ncc @fatkodima @skipkayhil ",
            "number": 45783,
            "url": "https://github.com/rails/rails/pull/45783",
            "updatedAt": "2022-08-08T09:52:16Z",
            "createdAt": "2022-08-06T19:45:27Z",
            "changedFiles": 3,
            "author": {
              "login": "shhavel"
            }
          },
          {
            "additions": 29,
            "deletions": 3,
            "title": "Adds schema parameter into enable_extension",
            "body": "### Summary\r\n\r\nThis patch tries to solve Heroku's new [PostgreSQL extension policy](https://devcenter.heroku.com/changelog-items/2446)\r\nwhile keeping the migration and schema code idiomatic.\r\n\r\nPostgreSQL adapter method `enable_extension` now allows to add an schema in its name.\r\nThe extension must be installed on another schema.\r\n\r\n\r\nUsage:\r\n\r\n`enable_extension('other_schema.hstore')`\r\n\r\n\r\nThe `enable_extension` can work with `schema` only if the given schema\r\nalready exists in the database.\r\n\r\n\r\n\r\n",
            "number": 45798,
            "url": "https://github.com/rails/rails/pull/45798",
            "updatedAt": "2022-10-25T19:20:10Z",
            "createdAt": "2022-08-09T16:30:40Z",
            "changedFiles": 3,
            "author": {
              "login": "lomefin"
            }
          },
          {
            "additions": 2,
            "deletions": 3,
            "title": "Update docs for `conf.hosts` to be more explicit about the main domain",
            "body": "### Summary\r\n\r\nClarify the info for `conf.hosts`, in the special case starting with period `.domain.com`, explaining that this allows the `domain.com` itself\r\n",
            "number": 45811,
            "url": "https://github.com/rails/rails/pull/45811",
            "updatedAt": "2022-08-16T13:37:54Z",
            "createdAt": "2022-08-11T18:23:42Z",
            "changedFiles": 1,
            "author": {
              "login": "augustocbx"
            }
          },
          {
            "additions": 73,
            "deletions": 4,
            "title": "Fix shared state from memoization of virtual attribute default procs",
            "body": "### Summary\r\n\r\nThis is a fix for #45817 with some additional test coverage for proc defaults for both Active Model and Active Record.\r\n\r\n**Context:** When a class with both `ActiveModel::Attributes` and `ActiveModel::Dirty` has an attribute with a proc default, a new instance of the model won't have a value for the attribute until it is first accessed and the default proc is called. The default value of an attribute is also not considered to be `changed?`, whether or not the default proc has been called to determine the value.\r\n\r\n**Bug:** When a model instance is `dup`ed, [`ActiveModel::Dirty` calls `with_value_from_user` for each attribute](https://github.com/rails/rails/blob/63d4f99e2bca562110d2597ba02541c400fd5b74/activemodel/lib/active_model/dirty.rb#L133-L141), wrapping the original `UserProvidedDefault` attribute instance in a new `FromUser` attribute. If a default value is still unknown at this point, it should not be passed as the original attribute because accessing it will memoize the proc value in both attribute instances and cause them to share state.\r\n\r\n**Fix:** Override `ActiveModel::Attribute::UserProvidedDefault#with_value_from_user` so an unknown default is not passed as the original attribute.\r\n\r\n**Bonus:** Fixing this also revealed that falsy return values of default procs are not memoized like others in `value_before_type_cast`. This appears to be unintentional and undocumented so I fixed it as well.\r\n\r\n### Other Information\r\n\r\nThis seems to be a long standing bug and the fix should apply to versions going back to 5.1.",
            "number": 45820,
            "url": "https://github.com/rails/rails/pull/45820",
            "updatedAt": "2022-08-12T08:42:42Z",
            "createdAt": "2022-08-12T08:42:38Z",
            "changedFiles": 6,
            "author": {
              "login": "quadule"
            }
          },
          {
            "additions": 3,
            "deletions": 1,
            "title": "Speed up no-op nested attributes save",
            "body": "### Summary\r\n\r\nWhen we have two large collections, traversing one for each item in the other has a complexity of O(n^2). This makes Active Record do a lot of work in case when no record data has changed.\r\n\r\nTo speed it up, we create a map of existing recrods by record ID, and use that inside the loop. This speeds up the no-op case (when no records have changed) **by 2x**.\r\n\r\n### Other Information\r\n\r\nHere is the script to measure performance:\r\n\r\n```rb\r\nrequire \"bundler/setup\"\r\nrequire \"active_record\"\r\nrequire \"benchmark\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.connection.create_table(:orders) { |t| }\r\nActiveRecord::Base.connection.create_table(:items) { |t| t.references :order, null: false }\r\n\r\nclass Order < ActiveRecord::Base\r\n  has_many :items\r\n  accepts_nested_attributes_for :items\r\nend\r\n\r\nclass Item < ActiveRecord::Base\r\nend\r\n\r\norder = Order.create\r\nItem.insert_all Array.new(2000, { order_id: order.id })\r\n\r\norder = Order.first\r\nitems_attributes = order.items.map { |item| { id: item.id } }\r\n\r\nputs Benchmark.realtime {\r\n  order.update(items_attributes: items_attributes)\r\n}\r\n```\r\n\r\nAdditional speedup could be achieved by doing a similar thing for `association.target.detect`, but I found that trickier to do, since `association.target` changes through the loop, and couldn't guarantee equivalent behaviour, so I left it out of the PR.",
            "number": 45828,
            "url": "https://github.com/rails/rails/pull/45828",
            "updatedAt": "2022-08-19T21:39:35Z",
            "createdAt": "2022-08-14T16:03:59Z",
            "changedFiles": 1,
            "author": {
              "login": "janko"
            }
          },
          {
            "additions": 51,
            "deletions": 24,
            "title": "Ensure binary column defaults are not hex in MySQL 8.0.3+",
            "body": "MySQL 8.0.3+ returns column defaults as hexadecimal.\r\nWe use these values for the column defaults before the record is loaded from the database.\r\nTo be compatible with MySQL before and after 8.0.3 we should try to cast these values to strings the way it behaved before mysql 8.0.3\r\n\r\nFIXES: https://github.com/rails/rails/issues/45832\r\n",
            "number": 45834,
            "url": "https://github.com/rails/rails/pull/45834",
            "updatedAt": "2022-08-29T08:05:06Z",
            "createdAt": "2022-08-16T16:53:18Z",
            "changedFiles": 2,
            "author": {
              "login": "HParker"
            }
          },
          {
            "additions": 60,
            "deletions": 14,
            "title": "support more cloud storage: direct upload with form data, customize HTTP method and response type",
            "body": "### Summary\r\n\r\nWhen building a new Service for ActiveStorage, we got two requirements:\r\n\r\n1. We need to direct upload a file with `POST` method instead of `PUT`, and send credential(token), key(filename) and file(binary to upload) with `Content-Type:   multipart/form-data; boundary=<frontier>`, instead of sending them with headers.\r\n2. We are creating a SaaS that make each Tenant has their own Cloud Service configuration, hence it's not possible to write all service configurations into `config/storage.yml`. For now, `ActiveStorage::Blob` has an anonymous validator to check `service_name` has to be declared in `ActiveStorage::Blob.services`, we can't disable this validator.\r\n\r\nSo, I think it's better to make them configurable like this:\r\n\r\n```ruby\r\n# write my own service\r\nmodule ActiveStorage\r\n  class Service::QiniumService < Service\r\n\r\n    # declare direct upload with HTTP POST method\r\n    def http_method_for_direct_upload\r\n      'POST'\r\n    end\r\n\r\n   # declare direct upload response type, \"text\" or \"json\"\r\n    def http_response_type_for_direct_upload\r\n      'json'\r\n    end\r\n\r\n    # declare direct upload file as multipart/form-data, the value of ':file' is the form data key to file\r\n    def form_data_for_direct_upload(key, expires_in:, content_type:, content_length:, checksum:, **)\r\n      put_policy = Qinium::PutPolicy.new(config, key: key, expires_in: expires_in)\r\n      put_policy.fsize_limit = content_length.to_i + 1000\r\n      put_policy.mime_limit = content_type\r\n      put_policy.detect_mime = 1\r\n      put_policy.insert_only = 1\r\n      {\r\n        key: key,\r\n        token: put_policy.to_token,\r\n        ':file': 'file'\r\n      }\r\n    end\r\nend\r\n```\r\n\r\nWith above changes, `ActiveStorage::Service` can support all types of HTTP methods, send token to cloud service with HTTP header or form data.\r\n\r\nchange `activestorage/app/models/active_storage/blob.rb` anonymous validator to named one:\r\n\r\n```ruby\r\n  validate do\r\n    if service_name_changed? && service_name.present?\r\n      services.fetch(service_name) do\r\n        errors.add(:service_name, :invalid)\r\n      end\r\n    end\r\n  end\r\n```\r\n\r\nchanges to \r\n\r\n```ruby\r\nvalidate :validate_service_name_in_services, if: -> { service_name_changed? && service_name.present? }\r\nprivate\r\n    def validate_service_name_in_services\r\n      services.fetch(service_name) do\r\n        errors.add(:service_name, :invalid)\r\n      end\r\n    end\r\n```\r\n\r\nNow, we can write our own Module prepend to ActiveStorage::Blob, to override `validate_service_name_in_services`, such as:\r\n\r\n```ruby\r\nmodule ActiveStorageSaas::BlobModelMixin\r\n  private\r\n    def validate_service_name_in_services\r\n      # dynamically define service name per TenantStorageService#id, later we can resolve tenant storage\r\n      #   configuration by parsing TenantStorageService:1 to tenant_storage = TenantStorageService.find(1)\r\n      #   tenant_storage.service_name => Real Storage Service Name\r\n      #.  tenant_storage.service_options => options to make instance of Service\r\n      /^TenantStorageService:\\d+$/.match?(service_name) || super\r\n    end\r\nend\r\n\r\nActiveSupport.on_load(:active_storage_blob) do\r\n  prepend ActiveStorageSaas::BlobModelMixin\r\nend\r\n```\r\n### Other Information\r\n\r\n- This is another PR #45442 that has the same requirement to customize HTTP Method\r\n- This is my real project that is working on this PR : https://github.com/xiaohui-zhangxh/activestorage_qinium/blob/main/lib/active_storage/service/qinium_service.rb\r\n- This is my real project that need to make our Tenants have their own storage configurations : https://github.com/xiaohui-zhangxh/activestorage_saas/blob/main/lib/active_storage/service/saas_service.rb\r\n\r\nNow, I'm not ready to write test code before this idea of PR is accepted. Once this idea is accepted, I'd like to write some tests for it.",
            "number": 45839,
            "url": "https://github.com/rails/rails/pull/45839",
            "updatedAt": "2022-08-25T14:21:48Z",
            "createdAt": "2022-08-17T07:41:48Z",
            "changedFiles": 3,
            "author": {
              "login": "xiaohui-zhangxh"
            }
          },
          {
            "additions": 36,
            "deletions": 2,
            "title": "Add Relation#select_append method to append to default selection.",
            "body": "_:information_source: reopenning https://github.com/rails/rails/pull/39873 per @rafaelfranca request_\r\n\r\n### How `select` works\r\n\r\n- when **no** `select` is used for query **all columns** are **selected**\r\n- when `select` is used only **selected columns** are **selected**\r\n\r\n### Why `select` is not enough?\r\n\r\nOften I would like to just append to current selection. Currently I need to check if anything was selected before or select `Arel.star` on my own. But I don't actually care what was selected before, I would like to add new field everytime.\r\n\r\n```ruby\r\n# before\r\nUser.joins(:account).select(User.arel_table[Arel.star], 'accounts.name AS account_name')\r\n#=> SELECT \"users\".*, accounts.name AS account_name FROM \"users\" INNER JOIN \"accounts\" ON \"accounts\".\"id\" = \"users\".\"account_id\" LIMIT $1 \r\n\r\n\r\n# after\r\nUser.joins(:account).select_append('accounts.name AS account_name')\r\n#=> SELECT \"users\".*, accounts.name AS account_name FROM \"users\" INNER JOIN \"accounts\" ON \"accounts\".\"id\" = \"users\".\"account_id\" LIMIT $1\r\n```\r\n\r\n### TODO\r\n\r\n- [ ] changelog entry\r\n- [ ] documentation\r\n\r\n---\r\n\r\n:information_source: We are using following monkey-patch in our app for some time already.\r\n\r\n```ruby\r\nmodule ActiveRecord\r\n  module SelectAppend\r\n    extend ActiveSupport::Concern\r\n\r\n    included do\r\n      ActiveRecord::Querying.delegate :select_append, to: :all\r\n    end\r\n\r\n    def select_append(*fields)\r\n      raise ArgumentError, \"Call `select_append' with at least one field\" if fields.empty?\r\n\r\n      self.select_values = [table[Arel.star]] unless self.select_values.present?\r\n      select(*fields)\r\n    end\r\n  end\r\nend\r\n```",
            "number": 45864,
            "url": "https://github.com/rails/rails/pull/45864",
            "updatedAt": "2022-08-25T20:05:27Z",
            "createdAt": "2022-08-20T20:37:47Z",
            "changedFiles": 3,
            "author": {
              "login": "simi"
            }
          },
          {
            "additions": 121,
            "deletions": 36,
            "title": "Make the test environment show rescuable exceptions in responses",
            "body": "Background\r\n----------\r\n\r\nDuring integration tests, it is desirable for the application to respond\r\nas closely as possible to the way it would in production. This improves\r\nconfidence that the application behavior acts as it should.\r\n\r\nIn Rails tests, one major mismatch between the test and production\r\nenvironments is that exceptions raised during an HTTP request (e.g.\r\n`ActiveRecord::RecordNotFound`) are re-raised within the test rather\r\nthan rescued and then converted to a 404 response.\r\n\r\nSetting `config.action_dispatch.show_exceptions` to `true` will make the\r\ntest environment act like production, however, when an unexpected\r\ninternal server error occurs, the test will be left with a opaque 500\r\nresponse rather than presenting a useful stack trace. This makes\r\ndebugging more difficult.\r\n\r\nThis leaves the developer with choosing between higher quality\r\nintegration tests or an improved debugging experience on a failure.\r\n\r\nI propose that we can achieve both.\r\n\r\nSolution\r\n--------\r\n\r\nChange the configuration option `config.action_dispatch.show_exceptions`\r\nfrom a boolean to one of 3 values: `:all`, `:rescuable`, `:none`. The\r\nvalues `:all` and `:none` behaves the same as the previous `true` and\r\n`false` respectively. What was previously `true` (now `:all`) continues\r\nto be the default for non-test environments.\r\n\r\nThe new `:rescuable` value is the new default for the test environment.\r\nIt will show exceptions in the response only for rescuable exceptions as\r\ndefined by `ActionDispatch::ExceptionWrapper.rescue_responses`. In the\r\nevent of an unexpected internal server error, the exception that caused\r\nthe error will still be raised within the test so as to provide a useful\r\nstack trace and a good debugging experience.\r\n",
            "number": 45867,
            "url": "https://github.com/rails/rails/pull/45867",
            "updatedAt": "2022-09-20T02:25:50Z",
            "createdAt": "2022-08-21T20:50:11Z",
            "changedFiles": 17,
            "author": {
              "login": "jdufresne"
            }
          },
          {
            "additions": 31,
            "deletions": 3,
            "title": "Validate option keys passed to #change()",
            "body": "### Summary\r\n\r\n`DateTime#change` and `Time#change` receive nearly identical keyword arguments, with one subtle difference: `DateTime#change` also supports `start:`.\r\n\r\nThe `change` method silently ignores invalid/unsupported keyword arguments, which makes it error-prone to typos and makes transitioning legacy codebases from `DateTime` to `Time` difficult.\r\n\r\nThe same problem affects related classes `Date` and `TimeWithZone`.\r\n\r\nThis PR enforces that all arguments passed to `change` are actually supported, and updates a stale comment to include `:nsec` and `:usec` as supported arguments to `DateTime#change`.",
            "number": 45902,
            "url": "https://github.com/rails/rails/pull/45902",
            "updatedAt": "2022-09-06T16:40:01Z",
            "createdAt": "2022-08-29T16:59:52Z",
            "changedFiles": 10,
            "author": {
              "login": "vlad-pisanov"
            }
          },
          {
            "additions": 3886,
            "deletions": 36,
            "title": "Migrate Rails Guides from `Turbolinks` to `Turbo`",
            "body": "### Summary\r\n\r\nThis Pull Requests updates the Rails Guides to use [Turbo](https://github.com/hotwired/turbo).\r\n\r\nRails 7 ships with Turbo by default and I think it makes sense if the official Rails guides also used Turbo instead of the now deprecated Turbolinks.\r\n\r\n\r\n### Other Information\r\n\r\nThis Pull Request is basically the spiritual successor of https://github.com/rails/rails/pull/32405.\r\n",
            "number": 45932,
            "url": "https://github.com/rails/rails/pull/45932",
            "updatedAt": "2022-10-19T09:35:50Z",
            "createdAt": "2022-09-02T15:43:06Z",
            "changedFiles": 9,
            "author": {
              "login": "marcoroth"
            }
          },
          {
            "additions": 11,
            "deletions": 1,
            "title": "Add supporting of SQL functions to AR#select",
            "body": "### Summary\r\n\r\n<!-- Provide a general description of the code changes in your pull\r\nrequest... were there any bugs you had fixed? If so, mention them. If\r\nthese bugs have open GitHub issues, be sure to tag them here as well,\r\nto keep the conversation linked together. -->\r\n\r\nAdd support of SQL functions to ActiveRecord::QueryMethods#select with\r\nhashes:\r\n```ruby\r\nPost.joins(:comments).select('COUNT(comments.id)' => :comment_count)\r\n```\r\n\r\n### Other Information\r\n\r\nRegarding to discussion on this PR: https://github.com/rails/rails/pull/45612\r\n\r\n<!-- If there's anything else that's important and relevant to your pull\r\nrequest, mention that information here. This could include\r\nbenchmarks, or other information.\r\n\r\nIf you are updating any of the CHANGELOG files or are asked to update the\r\nCHANGELOG files by reviewers, please add the CHANGELOG entry at the top of the file.\r\n\r\nFinally, if your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n-->\r\n",
            "number": 45933,
            "url": "https://github.com/rails/rails/pull/45933",
            "updatedAt": "2022-09-06T20:19:46Z",
            "createdAt": "2022-09-02T15:52:04Z",
            "changedFiles": 2,
            "author": {
              "login": "alextrueman"
            }
          },
          {
            "additions": 30,
            "deletions": 5,
            "title": "Added `blob_url` to the response of direct uploads API",
            "body": "### Summary\r\n\r\n- Added `blob_url` to the response of the `create` action of the  `ActiveStorage::DirectUploadsController`. \r\n- This will be very useful for API-only applications where the uploaded files (usually images/videos) need to be immediately rendered in the frontend. Once the file upload is complete, the client need not send another API to the backend to fetch the blob URL.\r\n\r\n<!-- Provide a general description of the code changes in your pull\r\nrequest... were there any bugs you had fixed? If so, mention them. If\r\nthese bugs have open GitHub issues, be sure to tag them here as well,\r\nto keep the conversation linked together. -->\r\n\r\n<!-- ### Other Information -->\r\n\r\n<!-- If there's anything else that's important and relevant to your pull\r\nrequest, mention that information here. This could include\r\nbenchmarks, or other information.\r\n\r\nIf you are updating any of the CHANGELOG files or are asked to update the\r\nCHANGELOG files by reviewers, please add the CHANGELOG entry at the top of the file.\r\n\r\nFinally, if your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n-->\r\n",
            "number": 45941,
            "url": "https://github.com/rails/rails/pull/45941",
            "updatedAt": "2022-09-04T15:13:36Z",
            "createdAt": "2022-09-04T15:06:23Z",
            "changedFiles": 3,
            "author": {
              "login": "AbhayVAshokan"
            }
          },
          {
            "additions": 59,
            "deletions": 1,
            "title": "Reset AR::Relation in bulk insert and upsert methods",
            "body": "This adds a call to `reset` when `insert_all` or `upsert_all` are used on a relation object, matching the behavior of `update_all` added in #41789.",
            "number": 45943,
            "url": "https://github.com/rails/rails/pull/45943",
            "updatedAt": "2022-09-05T06:43:34Z",
            "createdAt": "2022-09-05T06:43:31Z",
            "changedFiles": 5,
            "author": {
              "login": "quadule"
            }
          },
          {
            "additions": 10,
            "deletions": 0,
            "title": "Extract h1 headings from ActionText content",
            "body": "### Summary\r\n\r\nsimilar way how it's possible to extract ActionText Content links:\r\n\r\n```\r\nclass Post < ApplicationRecord\r\n  has_rich_text :content\r\nend\r\n\r\n Post.last.content.body.links\r\n# => [\"http://localhost:3000/whatever\"] \r\n``` \r\n\r\n... it would be awesome if we could extract h1 headings:\r\n\r\n```\r\nPost.last.content.body.headings\r\n# => [\"Hello Rails\"] \r\n``` \r\n\r\nMy use-case is that I want to extract title for post from the wysiwyg content\r\n\r\n```\r\nclass Post < ApplicationRecord\r\n  has_rich_text :content\r\n\r\n  def title\r\n    content.body.headings.first\r\n  end\r\nend\r\n```\r\n \r\n\r\n\r\n",
            "number": 45954,
            "url": "https://github.com/rails/rails/pull/45954",
            "updatedAt": "2022-09-28T20:20:12Z",
            "createdAt": "2022-09-06T22:14:16Z",
            "changedFiles": 2,
            "author": {
              "login": "equivalent"
            }
          },
          {
            "additions": 172,
            "deletions": 66,
            "title": "WIP: Add a cache per-request partial lookup cache to lookup context",
            "body": "This adds a fast path for partial lookup on \"simple\" partial renders.\r\n\r\nIn this case \"simple\" means:\r\n1. This is a plain partial render, like `render \"foo\", {...}` or `render partial: \"foo\", locals: {...}` \r\n2. No details are specified (format, handler, locale, variant)\r\n3. No block is given (the \"layout\" form)\r\n\r\nWhen this is the case, this allows a few improvements:\r\n1. We cache any simple partial we find in the LookupContext. The LookupContext should only exists for the length of the request and the cache is cleared whenever any details, prefixes, or template paths are changed on the lookup context.\r\n2. We go through a new `SimplePartialRenderer` class, which skips some of the work done in the regular `PartialRenderer` (string manipulation of the path/prefix, and building an hash for the options). A relatively minor optimization compared to 1, but very measurable.\r\n\r\ncc @byroot ",
            "number": 45958,
            "url": "https://github.com/rails/rails/pull/45958",
            "updatedAt": "2022-09-07T07:19:06Z",
            "createdAt": "2022-09-07T03:07:13Z",
            "changedFiles": 15,
            "author": {
              "login": "jhawthorn"
            }
          },
          {
            "additions": 13,
            "deletions": 0,
            "title": "add documentation for assocation scope block with owner argument",
            "body": "I was looking for a way include the using the association_proxy.owner in a the scope for an association. Little did I know that it was already there in *associaton.rb* just seemingly not documented in the guide. So...adding.\r\n\r\n```\r\ndef self.build_scope(scope)\r\n  if scope && scope.arity == 0\r\n    proc { instance_exec(&scope) }\r\n  else\r\n    scope\r\n  end\r\nend\r\n```",
            "number": 45980,
            "url": "https://github.com/rails/rails/pull/45980",
            "updatedAt": "2022-09-10T15:25:39Z",
            "createdAt": "2022-09-09T11:21:49Z",
            "changedFiles": 1,
            "author": {
              "login": "braindeaf"
            }
          },
          {
            "additions": 106,
            "deletions": 10,
            "title": "Added ability to resize email previews for better testing + ability t…",
            "body": "### Motivation / Background\r\n\r\nThe motivation is to add the ability to test email previews on the different resolutions, plus an easier way to see the source of the email.\r\n\r\n<img width=\"809\" alt=\"image\" src=\"https://user-images.githubusercontent.com/11101/189475652-a0d4d44c-456b-4d6e-bbb9-e7568959fa8d.png\">\r\n<img width=\"795\" alt=\"image\" src=\"https://user-images.githubusercontent.com/11101/189475657-8c2e648e-741d-419b-b8ae-3f102c548f8e.png\">\r\n<img width=\"812\" alt=\"image\" src=\"https://user-images.githubusercontent.com/11101/189475671-06bce8b6-6969-4f08-86ac-22fa7488d86a.png\">\r\n\r\nSince we are showing \"iframe\" with email content, with these changes we just changing the width of it.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes [REPLACE ME]\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n",
            "number": 45993,
            "url": "https://github.com/rails/rails/pull/45993",
            "updatedAt": "2022-09-10T17:50:41Z",
            "createdAt": "2022-09-10T08:36:12Z",
            "changedFiles": 3,
            "author": {
              "login": "igorkasyanchuk"
            }
          },
          {
            "additions": 1,
            "deletions": 1,
            "title": "Fix ActionText::ModelTest#test_eager_loading_all_rich_text",
            "body": "I'm getting:\r\n\r\n```\r\n/usr/share/gems/gems/actiontext-7.0.3.1/test/unit/model_test.rb:109]:\r\n2 instead of 1 queries were executed. [\"UPDATE \\\"active_storage_blobs\\\" SET \\\"metadata\\\" = ? WHERE \\\"active_storage_blobs\\\".\\\"id\\\" = ?\", \"SELECT \\\"messages\\\".\\\"id\\\" AS t0_r0, \\\"messages\\\".\\\"subject\\\" AS t0_r1, \\\"messages\\\".\\\"created_at\\\" AS t0_r2, \\\"messages\\\".\\\"updated_at\\\" AS t0_r3, \\\"action_text_rich_texts\\\".\\\"id\\\" AS t1_r0, \\\"action_text_rich_texts\\\".\\\"name\\\" AS t1_r1, \\\"action_text_rich_texts\\\".\\\"body\\\" AS t1_r2, \\\"action_text_rich_texts\\\".\\\"record_type\\\" AS t1_r3, \\\"action_text_rich_texts\\\".\\\"record_id\\\" AS t1_r4, \\\"action_text_rich_texts\\\".\\\"created_at\\\" AS t1_r5, \\\"action_text_rich_texts\\\".\\\"updated_at\\\" AS t1_r6, \\\"rich_text_bodies_messages\\\".\\\"id\\\" AS t2_r0, \\\"rich_text_bodies_messages\\\".\\\"name\\\" AS t2_r1, \\\"rich_text_bodies_messages\\\".\\\"body\\\" AS t2_r2, \\\"rich_text_bodies_messages\\\".\\\"record_type\\\" AS t2_r3, \\\"rich_text_bodies_messages\\\".\\\"record_id\\\" AS t2_r4, \\\"rich_text_bodies_messages\\\".\\\"created_at\\\" AS t2_r5, \\\"rich_text_bodies_messages\\\".\\\"updated_at\\\" AS t2_r6 FROM \\\"messages\\\" LEFT OUTER JOIN \\\"action_text_rich_texts\\\" ON \\\"action_text_rich_texts\\\".\\\"record_type\\\" = ? AND \\\"action_text_rich_texts\\\".\\\"name\\\" = ? AND \\\"action_text_rich_texts\\\".\\\"record_id\\\" = \\\"messages\\\".\\\"id\\\" LEFT OUTER JOIN \\\"action_text_rich_texts\\\" \\\"rich_text_bodies_messages\\\" ON \\\"rich_text_bodies_messages\\\".\\\"record_type\\\" = ? AND \\\"rich_text_bodies_messages\\\".\\\"name\\\" = ? AND \\\"rich_text_bodies_messages\\\".\\\"record_id\\\" = \\\"messages\\\".\\\"id\\\" ORDER BY \\\"messages\\\".\\\"id\\\" DESC LIMIT ?\"].\r\nExpected: 1\r\n  Actual: 2\r\n```\r\n\r\n<!--\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? -->\r\n\r\nThis Pull Request could have probably been an issue. I'm not sure if I should get 1 or 2.\r\n\r\n### Detail\r\n\r\nIs the response correct? We run the tests as part of package building in Fedora, like so:\r\n\r\n```\r\n$ ruby -rselenium-webdriver -Ilib:test -e 'Dir.glob \"./test/**/*_test.rb\",\r\n&method(:require)'\r\n```\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [ ] There are no typos in commit messages and comments.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [ ] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [ ] Tests are added if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [ ] PR is not in a draft state.\r\n* [ ] CI is passing.\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n",
            "number": 46042,
            "url": "https://github.com/rails/rails/pull/46042",
            "updatedAt": "2022-09-28T14:35:07Z",
            "createdAt": "2022-09-15T14:03:58Z",
            "changedFiles": 1,
            "author": {
              "login": "pvalena"
            }
          },
          {
            "additions": 118,
            "deletions": 1,
            "title": "Warn if frameworks are loaded too early",
            "body": "Prematurely loading frameworks in a Rails application may slow down boot time and could cause conflicts with load order and boot of the application.\r\n\r\nBy calling `add_load_hook_order` we can define a dependency that needs to\r\nbe loaded before the load hook has run, otherwise we show a warning:\r\n\r\n```bash\r\nLoad hook :active_record was called before load hook :after_initialize.\r\nPrematurely loading frameworks may slow down your boot time and could\r\ncause conflicts with load order and boot of your application.\r\n\r\nConsider wrapping your code with an on_load hook:\r\n\r\n    ActiveSupport.on_load(:active_record) do\r\n      # your code\r\n    end\r\n\r\nCalled from: config/initializers/some_initializer.rb:1:in `<main>'\r\n```\r\n\r\n### Additional information\r\n\r\n`ActiveRecord` should be loaded after `:after_initialize` has run, so I've added an initializer to add the load_hook order in the railtie. For other frameworks like ActionView and ActionPack it should probably be added as well.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.",
            "number": 46047,
            "url": "https://github.com/rails/rails/pull/46047",
            "updatedAt": "2022-10-03T19:43:25Z",
            "createdAt": "2022-09-15T20:16:36Z",
            "changedFiles": 8,
            "author": {
              "login": "p8"
            }
          },
          {
            "additions": 9,
            "deletions": 1,
            "title": "Configurable primary key type for Action Mailbox",
            "body": "### Motivation / Background\r\n\r\nSimilar to 753633abdfc72743419ba86ef4981679098365e5 and fa6067d, but for Action Mailbox\r\n\r\n### Additional information\r\n\r\nRef #42378\r\nRef #42657\r\n\r\nI tried to add a test similar to the one added in #42378, but had trouble trying to reference the migration class. If anyone has an idea for this I would love to hear it.\r\n\r\nFixes #44289 \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [ ] Tests are added if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n",
            "number": 46061,
            "url": "https://github.com/rails/rails/pull/46061",
            "updatedAt": "2022-09-20T21:56:10Z",
            "createdAt": "2022-09-17T21:24:20Z",
            "changedFiles": 1,
            "author": {
              "login": "skipkayhil"
            }
          },
          {
            "additions": 12,
            "deletions": 3,
            "title": "Allow manipulating namespaced indices on postgresql with the migration DSL",
            "body": "### Motivation / Background\r\n\r\n<!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? -->\r\n\r\nThis Pull Request has been created because we use namespaced indices in our database, resulting in indices looking like this:\r\n\r\n`namespace.index_table_on_column`\r\n\r\nTrying to use the ActiveRecord migration DSL to remove such an index fails because the `Utils.extract_schema_qualified_name` method returns only `namespace` and not `namespace.index_table_on_column`.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes `Utils.extract_schema_qualified_name` to handle this case.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n",
            "number": 46089,
            "url": "https://github.com/rails/rails/pull/46089",
            "updatedAt": "2022-09-28T15:13:07Z",
            "createdAt": "2022-09-21T13:26:38Z",
            "changedFiles": 3,
            "author": {
              "login": "toommz"
            }
          },
          {
            "additions": 89,
            "deletions": 0,
            "title": "Introduce ReadonlyValidator",
            "body": "\r\n\r\n<!--\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\nattr_readonly prevents attribute changes from being persisted to the database, however it has a downside that this happens silently.\r\n\r\n### Detail\r\n\r\nReadonlyValidator is an alternative to attr_readonly, which uses ActiveModel::Validations to throw a validation error when something tries to update a readonly attribute\r\n\r\n```\r\nclass Reply\r\n  belongs_to :topic\r\n\r\n  validates :topic, readonly: true\r\nend\r\n```\r\n\r\nCo-authored-by: Jeremy Cole <jeremy.cole@shopify.com>\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [ ] CI is passing.\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n",
            "number": 46092,
            "url": "https://github.com/rails/rails/pull/46092",
            "updatedAt": "2022-09-21T20:49:11Z",
            "createdAt": "2022-09-21T20:43:05Z",
            "changedFiles": 4,
            "author": {
              "login": "hmcguire-shopify"
            }
          },
          {
            "additions": 29,
            "deletions": 5,
            "title": "Move test:prepare task to misc.rake in railties",
            "body": "I've moved the `test:prepare` task from the TestUnit railties into the core misc.rake. I hope this is the right place for it. This fixes #45431 .\r\n\r\nWhere is the best place for documenting this as a public interface that can be used by other packages to latch on to?",
            "number": 46098,
            "url": "https://github.com/rails/rails/pull/46098",
            "updatedAt": "2022-10-04T14:35:39Z",
            "createdAt": "2022-09-22T12:31:28Z",
            "changedFiles": 4,
            "author": {
              "login": "simmerz"
            }
          },
          {
            "additions": 78,
            "deletions": 9,
            "title": "Allow Attachables to override default template when attachment is missing",
            "body": "### Motivation / Background\r\n\r\nWhen rendering ActionText attachments, if the underlying attachable has been removed, currently Rails renders the `action_text/attachables/missing_attachable` partial for all attachable types. Consuming applications can override this partial, but it is global across all attachable models.\r\n\r\nThis PR allows attachables models to override this partial to provide their own model-specific rendering.\r\n\r\nConsuming applications may wish to render different markup based on the model (e.g. `Missing user` for an @-mention, a fallback image for file uploads)\r\n\r\n### Detail\r\n\r\n- Adds a `to_missing_attachable_partial_path` class method to `ActionText::Attachables`\r\n- Changes `MissingAttachable` to delegate to model's `to_missing_attachable_partial_path` when the model can be parsed from the attachment `sgid`\r\n- If we cannot determine the attachable model from the attachment `sgid`, we fall back to the default partial\r\n\r\nPaired with @joeldrapper",
            "number": 46101,
            "url": "https://github.com/rails/rails/pull/46101",
            "updatedAt": "2022-10-03T19:40:06Z",
            "createdAt": "2022-09-22T14:47:07Z",
            "changedFiles": 8,
            "author": {
              "login": "swanson"
            }
          },
          {
            "additions": 187,
            "deletions": 7,
            "title": "Raise on assignment to readonly attributes",
            "body": "### Motivation / Background\r\n\r\nPreviously, assignment would succeed but silently not write to the database.\r\n\r\n### Detail\r\n\r\nThe changes to counter_cache are necessary because incrementing the counter cache for a column calls []=. I investigated an approach to use _write_attribute instead, however counter caches are expected to resolve attribute aliases so write_attribute/[]= seems more correct.\r\n\r\nSimilarly, []= was replaced with _write_attribute in merge_target_lists to skip the overriden []= and the primary key check. attribute_names will already return custom primary keys so the primary_key check in write_attribute is not needed.\r\n\r\nCo-authored-by: Alex Ghiculescu <alex@tanda.co>\r\n\r\n### Additional information\r\n\r\nBased on #42705\r\nCloses #46092 \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.\r\n\r\n",
            "number": 46105,
            "url": "https://github.com/rails/rails/pull/46105",
            "updatedAt": "2022-10-25T20:29:55Z",
            "createdAt": "2022-09-22T16:56:57Z",
            "changedFiles": 14,
            "author": {
              "login": "hmcguire-shopify"
            }
          },
          {
            "additions": 52,
            "deletions": 64,
            "title": "Use native `Element.matches` in UJS",
            "body": "**Summary**\r\n\r\nI've notice in https://github.com/rails/rails/pull/45546 that there is some unnecessary complexity in `Rails.matches` implementation. `Element.matches` is well supported by all browsers since several years ago, so I've simplified to just rely on `Element.matches`, and avoiding to import `Rails.matches` where is not necessary.\r\n\r\n**Other Information**\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/Element/matches#browser_compatibility\r\n![Screen Shot 2022-09-23 at 13 03 04](https://user-images.githubusercontent.com/1860816/191947217-a85e3f06-3595-43a2-a37e-d01f044bc0f6.png)\r\n",
            "number": 46116,
            "url": "https://github.com/rails/rails/pull/46116",
            "updatedAt": "2022-09-23T20:59:42Z",
            "createdAt": "2022-09-23T11:11:45Z",
            "changedFiles": 6,
            "author": {
              "login": "007lva"
            }
          },
          {
            "additions": 20,
            "deletions": 1,
            "title": "Fix ActionText::Attachable#as_json",
            "body": "Closes #45949 \r\n\r\nBefore this commit, using ActionText and calling `#as_json` on a non-persisted `ActiveStorage::Blob` raised an error.\r\n\r\nThis is because `ActionText::Attachable` is included in `ActiveStorage::Blob` and overrides the `#as_json` method to expose a global signed id. However, a global signed id can only be generated on a persisted instance.\r\n\r\nThis commit fixes the issue by making sure the blob is persisted before exposing the global signed id.",
            "number": 46126,
            "url": "https://github.com/rails/rails/pull/46126",
            "updatedAt": "2022-09-25T14:17:12Z",
            "createdAt": "2022-09-25T14:12:20Z",
            "changedFiles": 2,
            "author": {
              "login": "alexandreruban"
            }
          },
          {
            "additions": 8,
            "deletions": 0,
            "title": "Add `rake test:isolated` for Action Text",
            "body": "### Motivation / Background\r\n\r\nThis commit implements `rake test:isolated` for Action Text. While many modules have `rake test:isolated`, Action Text does not. This could find #46113 in advance.\r\n\r\n### Detail\r\n\r\n- Usage\r\n```ruby\r\ncd actiontext\r\nbundle exec rake test:isolated\r\n```\r\n\r\n### Additional information\r\n\r\nIt detects #46113 by reverting the merge commit via #46119\r\n\r\n```ruby\r\n$ git revert -m 1 4e7f876\r\n\r\n$ bundle exec rake test:isolated\r\n/home/yahonda/.rbenv/versions/3.1.2/bin/ruby -w -Ilib -Itest test/integration/controller_render_test.rb\r\n... snip ...\r\n\r\nE\r\n\r\nError:\r\nActionText::ControllerRenderTest#test_renders_as_HTML_when_the_request_format_is_not_HTML:\r\nNoMethodError: undefined method `render_to_string' for nil:NilClass\r\n\r\n        (renderer || default_renderer).render_to_string(*args, &block)\r\n                                      ^^^^^^^^^^^^^^^^^\r\n    test/integration/controller_render_test.rb:19:in `block in <class:ControllerRenderTest>'\r\n\r\nbin/test test/integration/controller_render_test.rb:17\r\n```\r\n\r\nTo run isolated tests at Rails CI,\r\nhttps://github.com/rails/buildkite-config also needs to be updated.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [ ] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [ ] Tests are added if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n",
            "number": 46129,
            "url": "https://github.com/rails/rails/pull/46129",
            "updatedAt": "2022-09-26T12:03:36Z",
            "createdAt": "2022-09-26T11:47:36Z",
            "changedFiles": 1,
            "author": {
              "login": "yahonda"
            }
          },
          {
            "additions": 16,
            "deletions": 4,
            "title": "Add custom key sizes for db:encryption:init task",
            "body": "This change allows to pass arguments to the `bin/rails db:encryption:init` task. That way, we ca easily specify the bytesize of each key. For example, if we want the `primary_key` and the `deterministic_key` to be 64 bytes; and the `key_derivation_salt` to be 32 bytes, we can run the following command:\r\n\r\n```\r\nbin/rails \"db:encryption:init[64,64,32]\"\r\n```\r\n\r\nWe will then get the following result in the console:\r\n\r\n```\r\nAdd this entry to the credentials of the target environment:\r\n\r\nactive_record_encryption:\r\n  primary_key: kkBkJb6LBYCgITxu80LW4KU3c8Pm4zSF7CknrE836pGsBVMrtAoENNFya3pDzASK\r\n  deterministic_key: rFOHbNpRsvaSqYSuhyRGiWFKPMzjb9wdqfRLQZnCkheVcQjidVR7bn6diUJIjtls\r\n  key_derivation_salt: TV2LerVWCeShYxSFjjzAs9pJzx77GNJp\r\n```",
            "number": 46138,
            "url": "https://github.com/rails/rails/pull/46138",
            "updatedAt": "2022-09-27T14:55:22Z",
            "createdAt": "2022-09-27T14:55:19Z",
            "changedFiles": 2,
            "author": {
              "login": "alexandreruban"
            }
          },
          {
            "additions": 48,
            "deletions": 6,
            "title": "HostAuthorization: confusing error message when using multiple hostnames",
            "body": "See #40230\r\n\r\n### Feedback needed\r\n\r\nThis pull request tries to solve the mentioned issue by displaying all hosts that have been blocked by `HostAuthorization`.\r\n\r\n**But** there are currently two test cases that are failing, that were fine before the commits of this pull request.\r\n\r\nFailing Tests:\r\n\r\n* `HostAuthorizationTest#test_detects_localhost_domain_spoofing`\r\n* `HostAuthorizationTest#test_blocks_requests_with_spoofed_X-FORWARDED-HOST`\r\n\r\nboth located in `actionpack/test/dispatch/host_authorization_test.rb`.\r\n\r\nFrom my understanding these test did **not fail** for the **wrong reasons**. It is in both cases expected that the **permitted, potentially spoofed hosts** are printed in the error message as `Blocked host:`. But they only were printed there, because the other host name within the test were **not permitted** and the bug described in #40230 lead to **always printing the X-FORWARDED-HOST** if any host name was not permitted.\r\n\r\nSeeing the **security implications** of this is beyond my understanding, thus I would like to have someone have a look at it, before \"fixing\" the tests (by me or someone else).\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [ ] PR is not in a draft state.\r\n* [ ] CI is passing.\r\n",
            "number": 46158,
            "url": "https://github.com/rails/rails/pull/46158",
            "updatedAt": "2022-09-29T22:32:48Z",
            "createdAt": "2022-09-29T21:19:10Z",
            "changedFiles": 4,
            "author": {
              "login": "Eusebius1920"
            }
          },
          {
            "additions": 54,
            "deletions": 2,
            "title": "Fix `upsert_all` for PostgreSQL json columns when `record_timestamps: true`",
            "body": "### Motivation / Background\r\n\r\n`upsert_all` uses a SQL `CASE` statement to determine whether the record's `updated_at` timestamp should be touched (#37627).\r\n\r\nHowever, the `CASE` condition does not support `json` columns on PostgreSQL, [since comparison operators are not supported for the `json` data type](https://www.postgresql.org/docs/current/functions-json.html#FUNCTIONS-JSON-PROCESSING).\r\n\r\n> [...] the usual comparison operators shown in [Table 9.1](https://www.postgresql.org/docs/current/functions-comparison.html#FUNCTIONS-COMPARISON-OP-TABLE) are available for `jsonb`, though not for `json`.\r\n\r\nAttempting to run an upsert with a `json` column would run into an error:\r\n\r\n```\r\nERROR:  operator does not exist: json = json (PG::UndefinedFunction)\r\n```\r\n\r\n### Detail\r\n\r\nThis PR adds an explicit `jsonb` type cast on `json` columns within that `CASE` condition. This allows the query to succeed.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [X] There are no typos in commit messages and comments.\r\n* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [X] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [X] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [X] Tests are added if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [X] PR is not in a draft state.\r\n* [X] CI is passing.\r\n",
            "number": 46159,
            "url": "https://github.com/rails/rails/pull/46159",
            "updatedAt": "2022-09-30T03:34:30Z",
            "createdAt": "2022-09-30T03:34:27Z",
            "changedFiles": 3,
            "author": {
              "login": "ruipserra"
            }
          },
          {
            "additions": 28,
            "deletions": 8,
            "title": "Add missing descriptions for additional commands in Rails help",
            "body": "### Motivation / Background\r\n\r\nWhen calling `rails help` most commands missed their description. We now\r\nshow the same descriptions as shown in `rails -T`.\r\n\r\n### Before\r\nCalling `rails help` shows most commands without the description. This is a bit confusing when `rails -T` does show the descriptions.\r\n\r\n<img width=\"1008\" alt=\"image\" src=\"https://user-images.githubusercontent.com/28561/83968184-9d587600-a8c7-11ea-90db-62a8545ab9b8.png\">\r\n\r\n### After\r\nWe can show the description after the command name and use some padding to align the descriptions. Lines are truncated to the width of the terminal.\r\n\r\n<img width=\"1009\" alt=\"image\" src=\"https://user-images.githubusercontent.com/28561/83968198-b9f4ae00-a8c7-11ea-9ba9-c19d3091a984.png\">\r\n\r\n### Detail\r\n\r\nRails::Command had logic for printing help commands not in 'usage': `print_commands`, `commands` and the `COMMANDS_IN_USAGE` constant. As these methods were only used by Rails::Command::HelpCommand, they have been moved HelpCommand.\r\n\r\nThis also changes the `printing_commands` methods on several classes. Instead of returning just the commands, they return the commands with the descriptions. As these are only used for printing help it does not affect any other code.\r\n\r\nSome commands (routes, credentials:diff, etc) show no description yet, but these can be added later.\r\n\r\nThis was previously submitted in #39561 but that PR was stale and I can no longer access the branch.\r\n\r\n<!--\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n",
            "number": 46163,
            "url": "https://github.com/rails/rails/pull/46163",
            "updatedAt": "2022-10-07T14:34:38Z",
            "createdAt": "2022-09-30T16:55:31Z",
            "changedFiles": 6,
            "author": {
              "login": "p8"
            }
          },
          {
            "additions": 69,
            "deletions": 15,
            "title": "Show common commands when calling `rails -h` outside a Rails dir",
            "body": "### Motivation\r\n\r\nWhen running `rails -h` or just `rails` outside a Rails application, Rails outputs all options for running the `rails new` command. This can be confusing to users when they probably want to see the common Rails commands.\r\n\r\nInstead, we should always show the common commands when running `rails -h` inside or outside a Rails application.\r\n\r\n### Detail\r\n\r\nWith this change help works as follows...\r\n\r\nOutside a Rails application we never show the extended commands: db:migrate, etc...\r\nThe extended commands require a Rails application. They also take up a lot screen space.\r\n\r\n- `rails`        outputs the help for the common commands\r\n- `rails -h`     outputs the help for the common commands.\r\n- `rails new -h` outputs the help for the new command.\r\n\r\nInside a Rails application it works mostly as before. The only change is that calling plain `bin/rails` now only outputs the common commands and not the extended commands.\r\n\r\n- `bin/rails`    outputs the help for the common commands\r\n- `bin/rails -h` outputs the help for the common commands and the\r\n  extended commands\r\n\r\n### Additional information\r\n\r\nThis was previously submitted in https://github.com/rails/rails/pull/41425 but that PR was stale and I can no longer access the branch.\r\n\r\nFixes: #40823\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n",
            "number": 46164,
            "url": "https://github.com/rails/rails/pull/46164",
            "updatedAt": "2022-10-08T11:10:41Z",
            "createdAt": "2022-09-30T17:08:25Z",
            "changedFiles": 6,
            "author": {
              "login": "p8"
            }
          },
          {
            "additions": 67,
            "deletions": 3,
            "title": "Allow resetting singular associations",
            "body": "`has_one :author` and `belongs_to :author` each define a `reload_author` method on the owning model. `reload_author` clears the cached `author` associate-object and eagerly fetches a new one from the database.\r\n\r\nIn some cases, you know the cached associate is stale but not whether it will be needed again. If it isn’t, the database query from calling `reload_*` is wasted.\r\n\r\nConsider the following models:\r\n\r\n```ruby\r\nclass Account < ApplicationRecord\r\n  has_many :trials\r\n  has_one :active_trial, -> { active }, class_name: \"Trial\"\r\nend\r\n\r\nclass Trial < ApplicationRecord\r\n  belongs_to :account\r\n  \r\n  scope :active, -> { where active: true }\r\n\r\n  def deactivate\r\n    update! active: false\r\n    # 📍\r\n  end\r\nend\r\n```\r\n\r\nAt the 📍 in `Trial#deactivate`, we know we’ve potentially made `account`’s `active_trial` association stale. We don’t know if `account` will need to reference its `active_trial` again. It would be useful to be able to evict the cached `active_trial`, if any, and defer the database query until the next access.\r\n\r\nFor collection associations, [`ActiveRecord::Associations::CollectionProxy`](https://edgeapi.rubyonrails.org/classes/ActiveRecord/Associations/CollectionProxy.html) provides a `#reset` method in addition to `#reload`. There’s not an equivalent way to reset a singular association, though. This PR adds one.",
            "number": 46165,
            "url": "https://github.com/rails/rails/pull/46165",
            "updatedAt": "2022-10-01T15:28:52Z",
            "createdAt": "2022-09-30T17:56:29Z",
            "changedFiles": 6,
            "author": {
              "login": "georgeclaghorn"
            }
          },
          {
            "additions": 22,
            "deletions": 20,
            "title": "Fix dev initializer logs not going to stdout",
            "body": "### Motivation / Background\r\n\r\nPreviously, the Rails server and console commands would broadcast logs to STDOUT if the Rails.logger was not already logging to STDOUT/STDERR. However, the broadcast was setup after initialization had finished, so some logs may not have been broadcast. More specifically, anything logged during initialization after the :initialize_logger initializer would not be logged to STDOUT.\r\n\r\nThis is an issue especially because of how common it is for deprecation warnings to be logged during initialization. Very important deprecation warnings such as :warn_if_autoloaded in Rails 6/6.1 would not be logged to STDOUT even though application logs after initialization would.\r\n\r\nThis is very confusing because users most likely assumed that development logs were identical between STDOUT and log/development.log when they were actually not.\r\n\r\n### Detail\r\n\r\nThis commit fixes the issue by broadcasting when the logger is set up, so that STDOUT and log/development.log will both log everything.\r\n\r\n### Additional information\r\n\r\nRef #44800 as this also fixes the STDERR/STDOUT duplicate logs if Rails.logger is configured to output to STDERR\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.",
            "number": 46170,
            "url": "https://github.com/rails/rails/pull/46170",
            "updatedAt": "2022-10-11T23:41:28Z",
            "createdAt": "2022-10-01T22:04:42Z",
            "changedFiles": 5,
            "author": {
              "login": "skipkayhil"
            }
          },
          {
            "additions": 99,
            "deletions": 0,
            "title": "Add guide for `ActiveRecord::DelegatedType` [skip ci]",
            "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because there is currently no description of the `ActiveRecord::DelegatedType` feature in the rails guide.\r\nI thought this feature would be useful for rails users and wanted to add it to the guide.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes Added guide for `ActiveRecord::DelegatedType`.\r\nThe following information was used as a reference:\r\n\r\nAPI document: https://api.rubyonrails.org/classes/ActiveRecord/DelegatedType.html\r\nadded features PR: https://github.com/rails/rails/pull/39341\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.\r\n\r\n",
            "number": 46190,
            "url": "https://github.com/rails/rails/pull/46190",
            "updatedAt": "2022-10-11T19:55:46Z",
            "createdAt": "2022-10-04T09:29:44Z",
            "changedFiles": 1,
            "author": {
              "login": "soartec-lab"
            }
          },
          {
            "additions": 3,
            "deletions": 0,
            "title": "Enable `Layout/DefEndAlignment` cop",
            "body": "### Motivation / Background\r\n\r\nThis pull request enables `Layout/DefEndAlignment` cop to avoid future `warning: mismatched indentations`.\r\n\r\n### Detail\r\n\r\n- After reverting the merge commit via #46188\r\n\r\n```ruby\r\n$ git revert -m 1 4328d0e16028a46bba79ab775e509a743ceaf18c\r\n[enable_layout_def_end_alignment 8445594965] Revert \"Merge pull request #46188 from yahonda/follow_up_45081\"\r\n 1 file changed, 1 insertion(+), 1 deletion(-)\r\n$ bundle exec rubocop\r\nInspecting 3041 files\r\n... snip ...\r\nOffenses:\r\n\r\nactiverecord/test/cases/query_logs_formatter_test.rb:10:5: W: [Correctable] Layout/DefEndAlignment: end at 10, 4 is not aligned with def at 6, 2.\r\n    end\r\n    ^^^\r\n\r\n3041 files inspected, 1 offense detected, 1 offense auto-correctable\r\n$\r\n```\r\n\r\n### Additional information\r\n\r\nFollow-up #46188\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [ ] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [ ] Tests are added if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n",
            "number": 46191,
            "url": "https://github.com/rails/rails/pull/46191",
            "updatedAt": "2022-10-05T08:14:25Z",
            "createdAt": "2022-10-04T11:00:22Z",
            "changedFiles": 1,
            "author": {
              "login": "yahonda"
            }
          },
          {
            "additions": 470,
            "deletions": 5,
            "title": "Add support for unique constraints (PostgreSQL-only).",
            "body": "### Motivation / Background\r\n\r\nBy default, unique constraints in PostgreSQL are checked after each statement. This works for most use cases,\r\nbut becomes a major limitation when swapping records with unique column.\r\n\r\nAn example of swapping unique columns between records.\r\n\r\n```ruby\r\nold_item = Item.create!(position: 1)\r\nnew_item = Item.create!(position: 2)\r\n\r\nItem.transaction do\r\n  old_item.update!(position: 2)\r\n  new_item.update!(position: 1)\r\nend\r\n```\r\n\r\nUsing the default behavior, the transaction would fail when executing the first `UPDATE` statement.\r\n\r\nThis pull request adds support for deferrable unique constraints statement in migrations:\r\n\r\n```ruby\r\nadd_unique_constraint :items, [:position], deferrable: true\r\n```\r\n\r\nThe `deferrable: true` leaves the default behavior, but allows manually deferring the checks using `SET CONSTRAINTS ALL DEFERRED` within a transaction. This will cause the unique constraint to be checked after the transaction.\r\n📝  Similar to https://github.com/rails/rails/pull/41487\r\n\r\nIt's also possible to adjust the default behavior from an immediate check (after the statement), to a deferred check (after the transaction).\r\n\r\n```ruby\r\nadd_unique_constraint :items, [:position], deferrable: :deferred\r\n```\r\n\r\n### Detail\r\n\r\nSimilar to https://github.com/rails/rails/pull/40224, this extends Active Record's migration/schema dumping to support [Unique Constraints](https://www.postgresql.org/docs/current/ddl-constraints.html#DDL-CONSTRAINTS-UNIQUE-CONSTRAINTS).\r\n\r\n```ruby\r\nadd_unique_constraint :sections, [:position], deferrable: :deferred, name: \"unique_section_position\"\r\nremove_unique_constraint :sections, name: \"unique_section_position\"\r\n```\r\n\r\n### Additional information\r\n\r\nThe unique constraint is supported by most DB, but its function is almost equivalent to unique index.\r\nPerhaps only PostgreSQL and Oracle Database with deferrable features would benefit from supporting unique constraint syntax.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.",
            "number": 46192,
            "url": "https://github.com/rails/rails/pull/46192",
            "updatedAt": "2022-10-27T05:38:08Z",
            "createdAt": "2022-10-04T11:57:47Z",
            "changedFiles": 14,
            "author": {
              "login": "alpaca-tc"
            }
          },
          {
            "additions": 41,
            "deletions": 2,
            "title": "PoC: AbstractController::Base#renderer_for",
            "body": "### Context \r\n\r\nThere has been some demands from view systems not based on paths, to offer some extension API that are better suited for them: https://discuss.rubyonrails.org/t/replace-to-partial-path-calls-with-a-more-abstract-to-renderable/81457\r\n\r\nI'm in favor of the general idea, but not at all with the proposed solutions so far.\r\n\r\n### Existing API\r\n\r\nCurrently you can customize the behavior of `render some_object` in two ways:\r\n\r\n- The object can respond to `to_partial_path` and return a view path.\r\n- The object can respond to `render_in` and return a string representation.\r\n\r\nWhat I don't like with both of these APIs is that they ask the object how to render itself. Applications often have several different ways to represent the same object based on the context, e.g. frontend vs admin panel, or HTML vs JSON.\r\n\r\n### Proposal\r\n\r\nIt would be way more powerful if the view or controller was in charge of selecting the proper renderer for a given object.\r\n\r\ne.g. (pseudo code)\r\n\r\n```ruby\r\nmodule Admin\r\n  class BaseController < ApplicationController\r\n    def renderer_for(object)\r\n      { partial: \"admin/#{object.class.underscore}\" }\r\n    end\r\n  end\r\n```\r\n\r\nOn paper, you'd probably want to define this on thew view, but in practive Rails users very rarely interact with the view, hence why I do this on the controller. But I'm maybe missing something.\r\n\r\nAnother benefit of such API would be to allow view component systems to better integrate with Rails by implementing their own conventions, e.g. (pseudo code)\r\n\r\n```ruby\r\nmodule MyViewComponentExtension\r\n  def renderer_for(object)\r\n    component_name = \"#{object.class.name}Component\"\r\n    \"#{self.class.module_parent_name}#{component_name}\".safe_constantize ||\r\n      component_name.constantize\r\n  end\r\nend\r\n```\r\n\r\nIt's somewhat similar to what Active Model Serializer used to do for its default serializer system:\r\nhttps://github.com/rails-api/active_model_serializers/blob/0-9-stable/lib/action_controller/serialization.rb\r\n\r\nIt used to work quite well.\r\n\r\n### Note\r\n\r\nhis is purely a proof of concept to demonstrate the general idea, what capabilities it brings to the table.\r\n\r\nI'm absolutely not happy with that implementation and I'm not suggesting to merge it. If we chose to go with the idea, we\r\nshould carefully study what the API would look like.\r\n",
            "number": 46202,
            "url": "https://github.com/rails/rails/pull/46202",
            "updatedAt": "2022-10-18T08:17:53Z",
            "createdAt": "2022-10-06T11:15:40Z",
            "changedFiles": 3,
            "author": {
              "login": "casperisfine"
            }
          },
          {
            "additions": 89,
            "deletions": 12,
            "title": "Define after_schema_load_callbacks",
            "body": "### Motivation / Background\r\n\r\nSee https://discuss.rubyonrails.org/t/rfc-new-activerecord-hook-after-load-schema/81506/3\r\n\r\nYears ago while working on one of the acts-as-taggable gems I discovered that certain method calls in ActiveRecord classes rely on database connections. Specifically, any method which wants to first check which columns or any column-related information is defined, will necessitate a database connection. So, you could override or alias the columns method to add behavior on when columns is first evaluated. I’ve since learned at the actual hook method at this time is load_schema\r\n\r\n\r\n ### Detail\r\n\r\nAdds an after_load_schema! hook to ActiveRecord::Base which can be defined per subclass.\r\n\r\nI intentionally started this PR with a very small change and no tests to validate the specific proposal and that it doesn't break anything.\r\n\r\n ### Additional information\r\n\r\nWe use something like this, for example, in our lib/sti_preload.rb\r\n\r\n\r\n```ruby\r\n # per https://guides.rubyonrails.org/autoloading_and_reloading_constants.html#single-table-inheritance\r\n # Usage:\r\n # In an STI base class\r\n #      AppConfig.when_not_eager_loading do\r\n #        include StiPreload\r\n #        self.deleted_sti_models = []\r\n #      end\r\nmodule StiPreload\r\n  extend ActiveSupport::Concern\r\n\r\n  included do\r\n    cattr_accessor :preloaded, instance_accessor: false\r\n    cattr_accessor :deleted_sti_models, instance_accessor: false, default: []\r\n  end\r\n\r\n  class_methods do\r\n    def descendants\r\n      preload_sti unless preloaded\r\n      super\r\n    end\r\n\r\n    # Constantizes all types present in the database. There might be more on\r\n    # disk, but that does not matter in practice as far as the STI API is\r\n    # concerned.\r\n    #\r\n    # Assumes store_full_sti_class is true, the default.\r\n    def preload_sti\r\n      after_load_schema! do\r\n        begin\r\n          polymorphic_name.constantize.preload_sti!\r\n        rescue PG::UndefinedTable, ActiveRecord::StatementInvalid => e\r\n          raise unless e.is_a?(PG::UndefinedTable) || e.cause.is_a?(PG::UndefinedTable)\r\n          $stderr.puts \"Skipping db-dependent code: #{polymorphic_name}\"\r\n          nil\r\n        end\r\n      end\r\n      self.preloaded = true\r\n    end\r\n\r\n    def preload_sti!\r\n      types_in_db = \\\r\n        base_class\r\n          .unscoped\r\n          .select(inheritance_column)\r\n          .distinct\r\n          .pluck(inheritance_column)\r\n          .compact - deleted_sti_models\r\n\r\n      logger ||= Rails.logger\r\n      types_in_db.each do |type|\r\n        logger&.debug(\"Preloading STI type #{type}\")\r\n        begin\r\n          type.constantize\r\n        rescue NameError\r\n          logger&.warn \"StiPreload: type class not found: table_name=#{table_name} type_name=#{type}. (ActiveRecord::SubclassNotFound)\"\r\n          Rails.env.production? ? raise : nil\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\n=begin\r\nmodule AppConfig\r\n  extend self\r\n\r\n  def when_not_eager_loading(&block)\r\n    return :not_eager_loading if is_eager_loaded_env?\r\n    Rails.application.configure do\r\n      config.after_initialize(&block)\r\n    end\r\n  end\r\n\r\n  # NOTE(BF): tasks which require \"config/environment\" won't have required \"config/boot\"\r\n  # which means that config.eager_load may be false when we want to treat it as true, as\r\n  # for example, with StiPreload, which we don't want to run during the `rake release` task\r\n  # or `rake assets:precompile`.\r\n  def is_eager_loaded_env?\r\n    return @is_eager_loaded_env if defined?(@is_eager_loaded_env)\r\n    @is_eager_loaded_env = Rails.application.config.eager_load || %w[production staging].include?(Rails.env)\r\n  end\r\nend\r\n=end\r\n```\r\n\r\nExample code I'm using right now, but I think this can be better handled via callbacks, which I\"m exploring\r\n\r\n```ruby\r\n  def self.inherited(base)\r\n    return super if respond_to?(:after_load_schema_hooks)\r\n    base.instance_eval <<~CLASS_METHODS, __FILE__, __LINE__ + 1\r\n      class_attribute :after_load_schema_hooks, default: []\r\n\r\n      def self.after_load_schema_hook(hook_context, &block)\r\n        after_load_schema_hooks << [hook_context, block]\r\n      end\r\n\r\n      # # Define hooks which run after the record class first connects to the database\r\n      alias without_after_load_schema_hooks load_schema\r\n      def self.load_schema\r\n        return if schema_loaded?\r\n        without_after_load_schema_hooks.tap do |result|\r\n          next unless result\r\n          after_load_schema_hooks.each do |(hook_context, block)|\r\n            # Rails.logger.debug { \"[AFTER LOAD_SCHEMA HOOKS] running\" }\r\n            hook_context.instance_exec(&block)\r\n          end\r\n        end\r\n      end\r\n    CLASS_METHODS\r\n    super\r\n  end\r\n```\r\n\r\nKnown gems using this general pattern\r\n\r\n- [validates_by_schema](https://github.com/joshwlewis/validates_by_schema/blob/548399d2671797326d85fbe845ada234c18240a2/lib/validates_by_schema.rb)\r\n- [acts-as-taggable-on](https://github.com/mbleigh/acts-as-taggable-on/blob/e0f859edd2c1f5d1d62f612478e11da8625e94bd/lib/acts_as_taggable_on/taggable/cache.rb)\r\n\r\nRelated code and PRs I'm looking at\r\n\r\n- https://github.com/rails/rails/blob/1891a3ffcc123de89c47011f36c547354c669481/activerecord/lib/active_record/model_schema.rb#L562-L596\r\n- https://github.com/rails/rails/blob/ea7a206c1dc8a48d1d4216be3b721fd16e680462/activemodel/lib/active_model/callbacks.rb#L109-L126\r\n- https://github.com/rails/rails/blob/f95c0b7e96eb36bc3efc0c5beffbb9e84ea664e4/activerecord/lib/active_record/attributes.rb#L263-L269\r\n- https://github.com/rails/rails/pull/43105\r\n- https://github.com/rails/rails/pull/45734\r\n- https://github.com/rails/rails/pull/37288\r\n- https://github.com/rails/rails/pull/39467 and https://github.com/rails/rails/pull/38871 (not merged, but interesting)\r\n- Same idea but rejected implementation https://github.com/rails/rails/pull/31681\r\n- https://github.com/rails/rails/pull/29216\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.",
            "number": 46205,
            "url": "https://github.com/rails/rails/pull/46205",
            "updatedAt": "2022-10-27T16:59:35Z",
            "createdAt": "2022-10-07T03:06:18Z",
            "changedFiles": 5,
            "author": {
              "login": "bf4"
            }
          },
          {
            "additions": 3994,
            "deletions": 23455,
            "title": "use Karma as the test runner for the UJS tests",
            "body": "### Motivation / Background\r\n\r\nIn #45546, Blade was replaced by rollup for building UJS.\r\n\r\nThis PR continues this work and replaces Blade with Rollup for the build of the tests and Karma as the test runner as per the Action Cable tests.\r\n\r\nThis removes the last use of Blade which is one of the dependencies that is locking Rails to Rack 2.X.\r\n",
            "number": 46206,
            "url": "https://github.com/rails/rails/pull/46206",
            "updatedAt": "2022-10-14T00:22:24Z",
            "createdAt": "2022-10-07T10:42:15Z",
            "changedFiles": 31,
            "author": {
              "login": "lsylvester"
            }
          },
          {
            "additions": 1,
            "deletions": 1,
            "title": "Delete variants from service only if variants are being tracked",
            "body": "### Motivation / Background\r\n\r\nWhen purging an `ActiveStorage::Blob` object, it makes two calls to the underlying file service. once to delete the actual file and then again to delete the variants. ActiveStorage makes tracking variants optional, and when not opted, the second delete call to the file service is redundant and can be avoided.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [ ] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.\r\n",
            "number": 46210,
            "url": "https://github.com/rails/rails/pull/46210",
            "updatedAt": "2022-10-28T07:06:17Z",
            "createdAt": "2022-10-08T19:13:48Z",
            "changedFiles": 1,
            "author": {
              "login": "ritikesh"
            }
          },
          {
            "additions": 9,
            "deletions": 1,
            "title": "Add API documentation for Routing#draw",
            "body": "Adding documentation to the API doc for `ActionDispatch::Routing::Mapper::Resources#draw` method, inspired by the Rails Guide routing section. Also removed extra colon in title.\r\n",
            "number": 46211,
            "url": "https://github.com/rails/rails/pull/46211",
            "updatedAt": "2022-10-09T04:08:20Z",
            "createdAt": "2022-10-08T21:56:24Z",
            "changedFiles": 2,
            "author": {
              "login": "hmbreaux"
            }
          },
          {
            "additions": 1,
            "deletions": 1,
            "title": "before_validations example 1 ,changed .nil? to .blank?",
            "body": "before_validation :ensure_login_has_a_value  does not work in the web browser but only in rails console as it is supposed to work.  This is because  \"\".nil? returns false while \"\".blank? returns true.  Changing .nil? to .blank? allows this example to work as it was intended IMO. :)\r\n\r\n",
            "number": 46213,
            "url": "https://github.com/rails/rails/pull/46213",
            "updatedAt": "2022-10-11T19:44:40Z",
            "createdAt": "2022-10-09T16:30:28Z",
            "changedFiles": 1,
            "author": {
              "login": "jackparsons93"
            }
          },
          {
            "additions": 23,
            "deletions": 0,
            "title": "Add `ActiveRecord::Persistence#exists?`",
            "body": "This is a feature request or proposal.\r\n\r\n### Motivation / Background\r\n\r\nWhen you want to check whether a record still exists in the database or not, there is already methods called `ActiveRecord::Persistence#destroyed?` and `ActiveRecord::Persistence#persisted?`, but they are not able to get accurate result unless you query the same instance that was used when the record was destroyed.\r\n\r\nFor example, this is often a problem when writing tests. Writing in the RSpec example commonly used in Rails app:\r\n\r\n```ruby\r\nRSpec.describe 'DELETE /articles/:id' do\r\n  let(:article) do\r\n    Article.create!\r\n  end\r\n\r\n  it 'destroys article' do\r\n    delete \"/articles/#{article.id}\"\r\n    expect(article).not_to be_persisted # WRONG CODE\r\n    # or expect(article).to be_destroyed # WRONG CODE\r\n  end\r\nend\r\n```\r\n\r\nIn such case, I have seen many codes written as a workaround like this, but none of them would be considered concise code:\r\n\r\n```ruby\r\nRSpec.describe 'DELETE /articles/:id' do\r\n  let(:article) do\r\n    Article.create!\r\n  end\r\n\r\n  it 'destroys article' do\r\n    delete \"/articles/#{article.id}\"\r\n    expect(article.class.exists?(article)).to be false\r\n    # or expect { article.reload }.to raise_error(ActiveRecord::RecordNotFound)\r\n    # or expect { article.class.find(article.id) }.to raise_error(ActiveRecord::RecordNotFound)\r\n    # or expect { article.class.find_by(id: article.id) }.to be_nil\r\n    # or expect { delete \"/articles/#{article.id}\" }.to change { article.class.count }.by(-1)\r\n    # or so...\r\n  end\r\nend\r\n```\r\n\r\nThis Pull Request has been created to provide a convenient API that can be used in such case. Of course, it could be used for many other cases as well.\r\n\r\n### Detail\r\n\r\nThis Pull Request adds `ActiveRecord::Persistence#exists?` so that you can easily check with this whether the record exists in the database or not.\r\n\r\n```ruby\r\nRSpec.describe 'DELETE /articles/:id' do\r\n  let(:article) do\r\n    Article.create!\r\n  end\r\n\r\n  it 'destroys article' do\r\n    delete \"/articles/#{article.id}\"\r\n    expect(article.exists?).to be false\r\n    # or expect(article).not_to exist\r\n  end\r\nend\r\n```\r\n\r\n### Additional information\r\n\r\nI am not that familiar with the ActiveRecord API, so maybe there is already a method to achieve something similar that I am not aware of. If so, please let me know.\r\n\r\nIt might be debatable whether the method name `exists?` means `exists on the database`, and whether it wouldn't be confusing in the situation where a method called `persisted?` already exists.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.",
            "number": 46214,
            "url": "https://github.com/rails/rails/pull/46214",
            "updatedAt": "2022-10-10T03:26:52Z",
            "createdAt": "2022-10-10T02:15:14Z",
            "changedFiles": 3,
            "author": {
              "login": "r7kamura"
            }
          },
          {
            "additions": 115,
            "deletions": 0,
            "title": "Add `ActiveRecord::Base.connection_pool.without_connection(&block)`",
            "body": "### Motivation / Background\r\n\r\nThe Rails [guide about threading](https://guides.rubyonrails.org/threading_and_code_execution.html#wrapping-application-code) mention that we should wrap the thread block with `Rails.application.executor.wrap`\r\nwhich one of its functionality is to automatically check in and out a database connection using\r\n`ActiveRecord::Base.connection_pool.with_connection`.\r\n\r\nThe guide says that we should immediately wrap the block \r\n\r\n```ruby\r\nThread.new do\r\n  Rails.application.executor.wrap do\r\n    # your code here\r\n  end\r\nend\r\n```\r\n\r\nOne possible use case of needing to spawn a thread is because we're running a long task, such as calling an external\r\nHTTP API call.\r\n\r\n```ruby\r\nThread.new do\r\n  Rails.application.executor.wrap do\r\n    user = User.first\r\n    response = Net::HTTP.get(URI(\"https://google.com/?user_id=#{@user.id}\")) # Might take a while\r\n\r\n    user.update(name: response)\r\n  end\r\nend\r\n```\r\n\r\nThat `Net::HTTP` call might take a long time. In this case, the thread will be unnecessarily holding the connection\r\nwhile waiting for the response from the network call.\r\n\r\nTo avoid this, we can wrap only the block that needs to connect to the database:\r\n\r\n```ruby\r\nThread.new do\r\n  Rails.application.executor.wrap do\r\n    @user = User.first\r\n  end\r\n\r\n  @response = Net::HTTP.get(URI(\"https://google.com/?user_id=#{@user.id}\"))\r\n\r\n  Rails.application.executor.wrap do\r\n    @user.update(name: @response)\r\n  end\r\nend\r\n```\r\n\r\nHowever, in a real-world case, it might not be practical to wrap each individual database call. In a typical Rails app, we're making more database calls compared to network calls.\r\n\r\nTherefore, it would be more manageable if we can have a method to mark a block that is NOT using the database.\r\n\r\nYes, the easiest way is to check the connection back in to the pool before making a network call, but it would be great if this behavior is supported by the framework.\r\n\r\n### Detail\r\n\r\nThis Pull Request added a new method `without_connection` to `ActiveRecord::ConnectionAdapters::ConnectionPool`, so we can use it like:\r\n\r\n```ruby\r\nThread.new do\r\n  Rails.application.executor.wrap do\r\n    user = User.first\r\n\r\n    ActiveRecord::Base.connection_pool.without_connection do\r\n      @response = Net::HTTP.get(URI(\"https://google.com/?user_id=#{@user.id}\"))\r\n    end\r\n\r\n    user.update(name: @response)\r\n  end\r\nend\r\n```\r\n\r\n### Additional information\r\n\r\nThere are a couple of behaviors that I'm not yet sure how should be handled.\r\n\r\n1. Should the method automatically checkout a new connection from the pool at the end of the block?\r\n\r\n\tCurrently, in this PR, it will check-out a new connection at the end of the block if there were a connection at the beginning of the block.\r\n\tI don't think we need this, the subsequent connection will be established lazily only when it's needed again anyway.\r\n\r\n2. Should we raise an error when trying to establish a connection inside a `without_connection`?\r\n\r\n\tCurrently, this PR allows doing so.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.\r\n",
            "number": 46225,
            "url": "https://github.com/rails/rails/pull/46225",
            "updatedAt": "2022-10-12T06:51:11Z",
            "createdAt": "2022-10-11T16:11:29Z",
            "changedFiles": 3,
            "author": {
              "login": "tejanium"
            }
          },
          {
            "additions": 43,
            "deletions": 8,
            "title": "Pass validation_context to validates_associated",
            "body": "<!--\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? -->\r\n\r\nThis Pull Request has been created because https://github.com/rails/rails/issues/46239\r\n\r\n### Detail\r\n\r\nThe docs imply that when specified the `on` option of `validates_associated` should be respected by the validated association. Prior to this change the validation context used will simply be the default behavior as if no `on` option were specified. With this change, the validation_context of the parent record is passed to the `valid?` check.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n",
            "number": 46238,
            "url": "https://github.com/rails/rails/pull/46238",
            "updatedAt": "2022-10-21T16:16:08Z",
            "createdAt": "2022-10-13T20:28:38Z",
            "changedFiles": 5,
            "author": {
              "login": "austenmadden"
            }
          },
          {
            "additions": 41,
            "deletions": 6,
            "title": "Combine predefined activestorage attachment variants",
            "body": "### Motivation / Background\r\n\r\nActiveStorage attachments can have variants. You can also predefine these variants, e.g. \"thumb\". \r\n\r\nSometimes you will want to combine these predefined-variants, like rotate a thumb:\r\n``` @user.avatar.variant(:thumb, :rotate_90) ```\r\nUntil now, you could only use 1 variant. This PR adds support for specifying multiple variants.\r\n\r\nThis Pull Request has been created because we use activestorage a lot and sometimes want to combine predefined-variants.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the way that ActiveStorage::Attachment looks up transformations. It is backwards compatible, but allows users to define more than 1 predefined variant.\r\n\r\n### Additional information\r\n\r\nI chose to use some recursion in the lookup process, it works just fine, but might be hard to read for some. Could write this out in a more explicit way.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n",
            "number": 46242,
            "url": "https://github.com/rails/rails/pull/46242",
            "updatedAt": "2022-10-14T12:41:51Z",
            "createdAt": "2022-10-14T07:26:23Z",
            "changedFiles": 4,
            "author": {
              "login": "mdh"
            }
          },
          {
            "additions": 48,
            "deletions": 2,
            "title": "Clear locking column on #dup",
            "body": "### Motivation / Background\r\n\r\nWhen duplicating records, we usually want to create a new record and don't want to keep the original `lock_version`. Just like timestamp columns are not copied.\r\n\r\n### Detail\r\n\r\nThis change fixes not to duplicate locking_column.\r\n\r\n```\r\ncar = Car.create!\r\ncar.touch\r\ncar.lock_version #=> 1\r\ncar.dup.lock_version #=> 0\r\n```\r\n\r\n### Additional information\r\n\r\nThis change potentially introduces unintended behavior change to rails users who rely on the current behavior.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n",
            "number": 46243,
            "url": "https://github.com/rails/rails/pull/46243",
            "updatedAt": "2022-10-14T08:15:04Z",
            "createdAt": "2022-10-14T07:57:13Z",
            "changedFiles": 4,
            "author": {
              "login": "shouichi"
            }
          },
          {
            "additions": 55,
            "deletions": 3,
            "title": "Add Proc as a type for ActiveJob retry_on attempts",
            "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because I needed `retry_on attempts:` to use more complex logic than an Integer.\r\n\r\nIn my specific case I was creating a concern for Jobs that would use `retry_on` to allow jobs to quietly fail and retry. The concern was going to use a method to allow attempts to be customized in individual jobs. \r\n```\r\n    included do\r\n      retry_on(QuietRetryError, wait: :exponentially_longer, attempts: quiet_retry_attempts) do\r\n        # ...\r\n      end\r\n    end\r\n```\r\n\r\nHowever this ran into a state where the method needed to be defined and run when the concern was included instead of being available later in the job. It would be very fragile to have to define the method before including the concern. This lead to me to looking at if attempts accepted anything besides an integer. It did not but I saw there was already a pattern in place for wait to accept a Proc. I thought if that pattern was repeated for attempts than it would allow more flexibility for configuring attempts.\r\n\r\nMy original thought was to have the Proc for attempts return a number similar to what the Proc for wait does. However, on thinking about it I decided that still did not leave much flexibility because attempts would still be determined by a number. Instead I switched it to return true/false so if the next attempt occurred could be determined by whatever logic was implemented in the Proc.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes ActiveJob retry_on attempts so it will accept a Proc.\r\n\r\nActiveJob retry_on allowed the wait option to be set as a Proc that calculates the wait but did not give the same option for attempts. attempts could be set to only a number of times to attempt or unlimited. However, jobs sometimes need different logic than number of executions to determine if they should try again.\r\n\r\nThis PR adds support for setting attempts to a Proc that returns either true or false. On true the retry will occur.\r\n\r\nAs a an example:\r\n\r\n    retry_on ProcRetryError, attempts: ->(executions) { executions < 2 }\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [ ] CI is passing.\r\n\r\n",
            "number": 46245,
            "url": "https://github.com/rails/rails/pull/46245",
            "updatedAt": "2022-10-18T21:34:58Z",
            "createdAt": "2022-10-14T14:32:44Z",
            "changedFiles": 4,
            "author": {
              "login": "rosew"
            }
          },
          {
            "additions": 17,
            "deletions": 1,
            "title": "Focus editor after calling `fill_in_rich_text_area`",
            "body": "### Motivation / Background\r\n\r\nWhen System Tests call `fill_in_rich_text_area`, they interact with `<trix-editor>` elements by changing the contents programmatically.\r\n\r\nThis is unlike how end-users will interact with the element. Overhauling the test helper to more accurately reflect Real World usage would require a sizable effort.\r\n\r\n### Detail\r\n\r\nWith that being said, leaving the `<trix-editor>` with focus after populating its contents is a minor change that makes it a more genuine recreation.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n",
            "number": 46249,
            "url": "https://github.com/rails/rails/pull/46249",
            "updatedAt": "2022-10-14T19:30:03Z",
            "createdAt": "2022-10-14T18:55:36Z",
            "changedFiles": 3,
            "author": {
              "login": "seanpdoyle"
            }
          },
          {
            "additions": 126,
            "deletions": 43,
            "title": "Custom route formatters",
            "body": "### Motivation / Background\r\n\r\nTo allow for easily customising the output of `rails routes` this PR implements the ability to register custom route formatters and adds a `--formatter` option to use the registered formatter(s). \r\n\r\n### Detail\r\n\r\nAdds a `ActionDispatch::Routing::ConsoleFormatter.register_formatter()` method and a `registered_formatters` on the `ActionDispatch::Routing::ConsoleFormatter` module. \r\nEach registered formatter implements `#draw(routes, \"title\")` to output the application routes and any routes registered in engines. \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n",
            "number": 46252,
            "url": "https://github.com/rails/rails/pull/46252",
            "updatedAt": "2022-10-15T21:11:52Z",
            "createdAt": "2022-10-15T21:09:26Z",
            "changedFiles": 4,
            "author": {
              "login": "phendrick"
            }
          },
          {
            "additions": 7,
            "deletions": 25,
            "title": "mark as unsafe after slicing a SafeBuffer",
            "body": "### Motivation / Background\r\n\r\nI have found inconsistent behaviour with `SafeBuffer`'s `slice`, `chr`, and `[]` functions.\r\n\r\n```ruby\r\nbuffer = ActiveSupport::SafeBuffer.new\r\nbuffer.concat(\"<html>\")\r\n\r\nbuffer[0..0].html_safe? # true\r\nbuffer.slice(0, 1).html_safe? # false\r\n\r\nbuffer[0].html_safe? # true\r\nbuffer.chr.html_safe? # false\r\n\r\n# these should be also returning false because we are creating a new String object\r\nbuffer[\"&\"].html_safe? # true\r\nbuffer[/&/].html_safe? # true\r\n```\r\n\r\nThis behaviour was introduced in this [PR](https://github.com/rails/rails/pull/33808), and this has been included in Rails 6.0.0.\r\nAlso, the behaviour of persistently keeping the `html_safe` flag from the `[]` function was introduced in this [commit](https://github.com/rails/rails/commit/8ccaa34103f1c37f7549f7f6c47a21dba21624db) from 2012.  \r\n\r\n### Detail\r\n\r\nSince `String#slice` is an alias method of `String#[]`, I believe `SafeBuffer`'s `slice` and `[]` functions should also have the same parity. \r\n\r\nAlso, since `String#[]` creates a new String object, I don't think we should keep the original `SafeBuffer` Object's `html_safe` flag, and set the new String's `html_safe` flag to be `false` as we do with other unsafe methods.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.\r\n\r\n",
            "number": 46259,
            "url": "https://github.com/rails/rails/pull/46259",
            "updatedAt": "2022-10-18T15:30:53Z",
            "createdAt": "2022-10-17T20:36:47Z",
            "changedFiles": 2,
            "author": {
              "login": "ggmichaelgo"
            }
          },
          {
            "additions": 36,
            "deletions": 2,
            "title": "Support proc and symbol for `NumericalityValidator`'s `:in` option",
            "body": "This PR adds support for proc and symbol parameters for `NumericalityValidator`'s `:in` option\r\n\r\nFor instance :\r\n```ruby\r\nvalidates_numericality_of :price, in: ->(o) { 0..o.max_price }\r\n```\r\n\r\nor :\r\n\r\n```ruby\r\nvalidates_numericality_of :price, in: :price_range\r\n    \r\ndef price_range\r\n  0..max_price\r\nend\r\n```\r\n",
            "number": 46262,
            "url": "https://github.com/rails/rails/pull/46262",
            "updatedAt": "2022-10-18T11:04:31Z",
            "createdAt": "2022-10-18T10:32:09Z",
            "changedFiles": 3,
            "author": {
              "login": "ThomasSevestre"
            }
          },
          {
            "additions": 38,
            "deletions": 17,
            "title": "Support custom test paths",
            "body": "<!--\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? -->\r\n\r\nThis Pull Request has been created because we're using [Packwerk](https://github.com/Shopify/packwerk) for our Rails app. We'd like to have tests for code in a package be defined in the directory for that package, e.g. `packages/a/test`. However, there is not a trivial way to make Rails's standard `test`/`test:all` etc. commands also run these tests. Our current solution is a [custom rake file](https://gist.github.com/TastyPi/75ed5f2aa01bfb59ccd598c924c08ea9) that redefines the tasks to include the packages' tests, but ideally this would be supported by Rails itself.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes `Rails::TestUnit::Runner` to support specifying default test paths using `Rails::Paths::Path`. This mirrors how `Rails::Engine` and `Rails::Application` can be configured to use different paths from the standard. It also loads `config/tests.rb` if present, otherwise there is not a good place to configure the paths.\r\n\r\nFor the example above, the `config/tests.rb` would contain something like:\r\n\r\n```ruby\r\nDir.glob(\"packages/*/test\").each do |path|\r\n  Rails::TestUnit::Runner.paths[\"test\"] << path\r\nend\r\n```\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\nThis is my first time contributing to Rails, so I suspect this pattern does not fully follow Rails conventions, however I have at least checked that it works. I have not tested it with a project that uses `rspec` as I am unfamiliar with it.\r\n\r\nI would say the most questionable parts are:\r\n\r\n1. Is `Rails::TestUnit::Runner` the right class for this configuration?\r\n2. Is `Rails::Paths::Path` the best solution for specifying these paths?\r\n3. Should `config/tests.rb` be introduced or is there a better way to run code before tests that I am unaware of?\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [ ] Tests are added if you fix a bug or add a feature.\r\n  (I have not investigated how to test this and do not wish to spend too much time on it before I know the final implementation and whether this feature is wanted)\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [ ] CI is passing.\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n",
            "number": 46264,
            "url": "https://github.com/rails/rails/pull/46264",
            "updatedAt": "2022-10-18T16:12:46Z",
            "createdAt": "2022-10-18T16:08:23Z",
            "changedFiles": 4,
            "author": {
              "login": "TastyPi"
            }
          },
          {
            "additions": 70,
            "deletions": 37,
            "title": "Update Active Record Query Logs docs",
            "body": "Fixes https://github.com/rails/rails/issues/46103 and some things I found along the way. The major changes:\r\n- Explicitly show how to enable the functionality\r\n- Show how to properly configure custom tags and in which files to prevent the problems listed in the aforementioned issue\r\n- Add missing `namespaced_controller` default tag\r\n- Remove mention of ActiveSupport::ExecutionContext since that is nodoc'ed internal API since https://github.com/rails/rails/pull/43598, instead show the [ActiveSupport::CurrentAttributes](https://api.rubyonrails.org/classes/ActiveSupport/CurrentAttributes.html) example of a current account\r\n- Mention the SQLCommenter format\r\n\r\nAlso added a section in the 'Debugging Rails Applications' guide for discoverability.\r\n\r\ncc @skipkayhil \r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.",
            "number": 46265,
            "url": "https://github.com/rails/rails/pull/46265",
            "updatedAt": "2022-10-29T21:21:42Z",
            "createdAt": "2022-10-18T16:17:58Z",
            "changedFiles": 2,
            "author": {
              "login": "bdewater"
            }
          },
          {
            "additions": 2,
            "deletions": 0,
            "title": "Make TagBuilder#attributes documentation public [ci-skip]",
            "body": "The `TagBuilder#attributes` seems to be [public AP](https://github.com/rails/rails/pull/40657)I but because TagBuilder is defined as `:nodoc` it doesn't show up in the API docs.\r\n\r\nBy adding `:doc:` for this method, it becomes visible in the API docs:\r\n<img width=\"793\" alt=\"image\" src=\"https://user-images.githubusercontent.com/28561/196500130-67fb2c04-a472-4f17-beb6-6a7479e5349f.png\">\r\n\r\nThis PR makes only `attributes` public, but since more methods of `TagBuilder` are [described in `tag`](https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/TagHelper.html#method-i-tag) maybe we can make more public?",
            "number": 46266,
            "url": "https://github.com/rails/rails/pull/46266",
            "updatedAt": "2022-10-18T19:12:17Z",
            "createdAt": "2022-10-18T17:17:00Z",
            "changedFiles": 1,
            "author": {
              "login": "p8"
            }
          },
          {
            "additions": 191,
            "deletions": 187,
            "title": "Move calls on Base connection to methods for rake tasks",
            "body": "This PR aims to contain calls to `Base.connection` and `Base.establish_connection` in active record rake tasks and the migration code. In a follow up PR I will swap out the `Base` class for a temporary class which will allow us to stop clobbering `Base` in the active record rails tasks.\r\n\r\nThis work is an important step to achieve moving away from Active Record's dependence on `Base.connection` and\r\n`Base.establish_connection`. The reliance on `Base.connection` is problematic for sharding support and calling `Base.establish_connection` in the Rake tasks (without any warning message) indicates it's ok for applications to do the same (outside these tasks, it's not).\r\n\r\nI've vetted the approach of swapping out `Base` for a temporary class in another branch but decided that it would be easier to demonstrate and contain the changes if I first contained these calls. The major changes in this PR are:\r\n\r\n* Contain `Base.connection` in `Tasks.migration_connection` and replace calls to each\r\n* Contain `Base.establish_connection` in `Tasks.establish_connection` and replace calls to each\r\n* Add a `with_temporary_connection_for_each` method for cases where we need to loop over each config and set the connection back afterwards\r\n* Add a `with_temporary_connection(db_config)` method for cases where we have one config but need to establish a new connection and set the old one back.\r\n* Update every place we were looping through configs to establish a connection with the new temporary connection methods.\r\n\r\nThere are a lot of changes here but I've pulled out everything that didn't need to be in this commit into other PRs.\r\n\r\nOnce this is merged, I'll create the next PR that replaces `Base` the new methods in `Tasks` with a temporary connection and then we will officially be no longer clobbering `Base` in these tasks. This also reduces complexity because we won't need to ensure we set `Base.connection` back at the end. Once that is working and all internal methods are using the new temp class I'll deprecate calls on `Base.connection` in these methods. Most applications just override the task but not the actual methods in `Tasks` so my hope is this will be smooth-ish. However, nothing will stop applications from still using `Base.connection` for a very long time if they still want to clobber.\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.",
            "number": 46270,
            "url": "https://github.com/rails/rails/pull/46270",
            "updatedAt": "2022-10-24T19:20:49Z",
            "createdAt": "2022-10-18T20:22:11Z",
            "changedFiles": 4,
            "author": {
              "login": "eileencodes"
            }
          },
          {
            "additions": 52,
            "deletions": 2,
            "title": "Support `has_rich_text` with `strict_loading:`",
            "body": "### Detail\r\n\r\nExpand the `has_rich_text` signature to accept a `strict_loading:` value. Forward that value along to the `has_one` declaration made under the hood. When omitted, `strict_loading:` will be set to the value of the `strict_loading_by_default` class attribute (false by default).\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.\r\n",
            "number": 46271,
            "url": "https://github.com/rails/rails/pull/46271",
            "updatedAt": "2022-10-22T22:33:17Z",
            "createdAt": "2022-10-18T21:04:10Z",
            "changedFiles": 3,
            "author": {
              "login": "seanpdoyle"
            }
          },
          {
            "additions": 1,
            "deletions": 0,
            "title": "Includes use of `RAILS_STRICT_WARNING` in Contribution doc - Fix #46263",
            "body": "### Motivation / Background\r\n\r\n<!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? -->\r\n\r\nThis Pull Request has been created because there should be information in the Contributing to Ruby on Rails guideline on enabling tests identical to CI during development. This information could enable contributors to iterate fewer times on broken CI tests by virtue of having the knowledge to set the `RAILS_STRICT_WARNING` flag. Enabling this flag would surface errors that need to be addressed ahead of time.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the Contributing to Ruby on Rails markdown\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] There are no typos in commit messages and comments.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Feature branch is up-to-date with `main` (if not - rebase it).\r\n* [x] Pull request only contains one commit for bug fixes and small features. If it's a larger feature, multiple commits are permitted but must be descriptive.\r\n* [x] Tests are added if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] PR is not in a draft state.\r\n* [x] CI is passing.\r\n\r\n<!--\r\nNote: Please avoid making *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails! -->\r\n",
            "number": 46272,
            "url": "https://github.com/rails/rails/pull/46272",
            "updatedAt": "2022-10-19T15:02:10Z",
            "createdAt": "2022-10-18T22:54:13Z",
            "changedFiles": 1,
            "author": {
              "login": "aviralsomani"
            }
          },
          {
            "additions": 20,
            "deletions": 2,
            "title": "Avoid overwriting configs with except call",
            "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? -->\r\n\r\nThis Pull Request has been created because of configuration surprises that impacted me as part of applying configuration changes as part of upgrading to Rails 7.0 and opting in to new framework defaults.\r\n\r\n### Detail\r\n\r\nUpdates the set_configs initializer of ActiveRecord to avoid clobbering the local configs variable link back to the main app config object for ActiveSupport.on_load block which prevents the after_initialize block from seeing config changes in initializers.\r\n\r\nFixes #46277.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] CI is passing.\r\n\r\n",
            "number": 46278,
            "url": "https://github.com/rails/rails/pull/46278",
            "updatedAt": "2022-10-21T15:17:28Z",
            "createdAt": "2022-10-19T17:50:38Z",
            "changedFiles": 2,
            "author": {
              "login": "dfritsch"
            }
          },
          {
            "additions": 10,
            "deletions": 0,
            "title": "Update JavaScript include tag documentation [ci-skip]",
            "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!-- Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important? -->\r\n\r\nThe options `defer` and `async` are absent from the documentation of the JavaScript include tag helpers.\r\n\r\n### Detail\r\n\r\nDespite of the behaviour is already implemented the documentation is absent.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\nDocumentation about the script HTML tag: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script\r\n\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] CI is passing.\r\n\r\n",
            "number": 46296,
            "url": "https://github.com/rails/rails/pull/46296",
            "updatedAt": "2022-10-21T16:47:16Z",
            "createdAt": "2022-10-21T07:26:46Z",
            "changedFiles": 1,
            "author": {
              "login": "fidalgo"
            }
          },
          {
            "additions": 103,
            "deletions": 0,
            "title": "Fix ingress controllers' ability to accept non UTF-8 encoded emails",
            "body": "### Motivation / Background\r\n\r\nSince most of the ingress controllers receive raw MIME data in POST body, it is impossible to guaratee that these are in UTF-8 as email comes in all possible encodings.\r\n\r\nFixes #46297\r\n\r\n### Detail\r\n\r\nThis patch disables force transcoding to UTF-8 by ActionController params processing for params that contain RAW MIME email bodies.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] CI is passing.\r\n\r\n",
            "number": 46300,
            "url": "https://github.com/rails/rails/pull/46300",
            "updatedAt": "2022-10-22T15:04:28Z",
            "createdAt": "2022-10-21T18:10:03Z",
            "changedFiles": 9,
            "author": {
              "login": "honzasterba"
            }
          },
          {
            "additions": 0,
            "deletions": 1,
            "title": "Removes the Content-Length header in Blobs::Proxycontroller#show",
            "body": "### Motivation / Background\r\n\r\nThis Pull Request has been created because I researched the cause for #46288. When investigating, I noticed we're setting the header but always remove it later in the code linked below.\r\n\r\n### Detail\r\n\r\nEven though the Content-Length header is set in the controller action, it will always be removed in https://github.com/rails/rails/blob/7fdcbe747f7ab5ef664b894f73c8e0ada04c5c50/actionpack/lib/action_controller/metal/live.rb#L154 We should not set it in the first place in this action.",
            "number": 46306,
            "url": "https://github.com/rails/rails/pull/46306",
            "updatedAt": "2022-10-22T11:19:07Z",
            "createdAt": "2022-10-22T11:19:04Z",
            "changedFiles": 1,
            "author": {
              "login": "codergeek121"
            }
          },
          {
            "additions": 52,
            "deletions": 1,
            "title": "Fix content-type header with `send_stream`",
            "body": "[The Rack specification](https://github.com/rack/rack/blob/0a62f75eeee8fbf14e87a92d458a4428382e3504/SPEC.rdoc#label-The+Headers) states that header values must be a `String` instance (or array thereof).\r\n\r\nWhen setting up the content-type header based on the file extension, `send_stream` assigns the whole\r\n`Mime::Type` object, instead of its `String`\r\nrepresentation.\r\n\r\nThis change ensures that all three ways of setting the content-type header (implicit via extension,\r\nimplicit via a symbol, and explicit via a string)\r\nall result in a `String` instance being assigned as the header's value.\r\n\r\n### Motivation / Background\r\n\r\nThis Pull Request has been created because other libraries (in this case specifically https://github.com/DFE-Digital/dfe-analytics and its use of BigQuery) assume that header values will be strings per the rack spec.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the behaviour of `send_stream` when it is inferring a content-type from the file extension, so that it assigns a `String` instance as the header value rather than a `Mime::Type` instance.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [ ] CI is passing.\r\n\r\n",
            "number": 46327,
            "url": "https://github.com/rails/rails/pull/46327",
            "updatedAt": "2022-10-28T03:58:40Z",
            "createdAt": "2022-10-24T14:31:41Z",
            "changedFiles": 2,
            "author": {
              "login": "elliotcm"
            }
          },
          {
            "additions": 165,
            "deletions": 8,
            "title": "Allow specifying columns to use in ActiveRecord::Base object queries",
            "body": "### Description\r\nThis PR is a continuation of the PR that made a small refactoring to prepare Rails to support composite primary keys in the future - https://github.com/rails/rails/pull/41427\r\nThis PR renames `_primary_key_constraints_hash` private method to be less specific and adds a capability to configure it using a public `ActiveRecord::Base.query_constraints` macro.\r\n\r\n### Rationale\r\nThis proposed capability is fundamental for supporting composite primary keys in Rails and utilizing tenant based sharding. A Tenant based sharding design requires all queries to a SQL database to include the sharding key. For example tables sharded by user_id will always need to be queried by user_id value to make sure that the query reaches the correct shard. As a real-world example of a sharding solution we can name [Vitess](https://vitess.io/), however, we are building a solution that is generic in a similar way with `default_scope(all_queries: true)` and will enable applications to query by multiple default constraints regardless of underlying technology.\r\n### Implementation details\r\n\r\nRenames `_primary_key_constraints_hash` to `_query_constraints_hash` to avoid being too specific as the feature doesn’t necessarily have to represent a primary key.\r\n\r\nDefines a new `QueryConstraints` module with the definition of the `query_constraints` macro and `query_constraints_list` class attribute which stores the configuration. At first class attribute and macro definition were placed in `ActiveRecord::Core` but a separate module was chosen mainly to avoid cluttering core with documentation for `query_constraints`\r\n`QueryConstraints` module is included directly into `Persistence` as `Persistence` relies on the class attribute to be defined.\r\n`_query_constraints_hash` uses `attribute_in_database` to fetch the value to unlock the ability to update parts of the composite primary key like\r\n```ruby\r\ndeveloper.update!(company_id: 2)\r\n# => UPDATE \"developers\" SET \"company_id\" = 2 WHERE \"developers\".\"company_id\" = 1 AND \"developers\".\"id\" = 1\r\n```\r\n\r\n### Naming\r\n\r\nThe main use-case of this capability is to define a “virtual” composite primary key like `[:shard_id, :id]` or `[:tenant_id, :id]` for an Active Record model. However we would like to avoid explicitly mentioning the term “primary key” as the capability in the current implementation is generic and only provides foundation to support composite primary keys.\r\nAt the same time, name `query_constraints` may be too generic but luckily it’s short enough for us to perhaps consider specializing it a little bit with an additional word like `query_by_attributes`\r\nPlease do not hesitate to provide your naming suggestions!\r\n\r\nIsn’t it similar to  `default_scope(all_queries: true) {}`\r\nEven though the proposed feature and `all_queries` capabilities share some similarities they are not quite the same. While `default_scope(all_queries: true)` applies to all queries, `query_constraints` changes behavior issued by a single Active Record object. It also gets column values directly from the object while `default_scope` needs either a hardcoded or globally accessible value like `default_scope { company_id: Current.company_id }` \r\n\r\n### Vision\r\nI also wanted to briefly share a bigger picture for this foundational feature and upcoming additions we would like to propose soon:\r\nRails starts to implicitly configure `query_constraints` to match the `primary_key`\r\nAdd capability to build a “row-constructor” using an Active Record relation. For example `Model.where([:tenant_id, :id] => [[1,2], [1,3], [2,4]])` Similar to https://github.com/rails/rails/pull/36003\r\nAssociations should respect the `query_constraints` and by implication composite primary key configuration. For example given a blogging platform with models `Blog`, `BlogPost`, `Comment` sharded by `blog_id`, query like `comment.blog_post` should load blogpost using whole `query_constraints` clause\r\n\r\n",
            "number": 46331,
            "url": "https://github.com/rails/rails/pull/46331",
            "updatedAt": "2022-10-27T17:57:12Z",
            "createdAt": "2022-10-24T22:26:50Z",
            "changedFiles": 10,
            "author": {
              "login": "nvasilevski"
            }
          },
          {
            "additions": 1,
            "deletions": 1,
            "title": "Point 'Canberra' time zone mapping to Australia/Canberra'",
            "body": "### Motivation / Background\r\n\r\nWhen building a timezone select, the options for Australia are:\r\n\r\n```\r\n<option value=\"Australia/Adelaide\">(GMT+09:30) Adelaide</option>\r\n  <option value=\"Australia/Darwin\">(GMT+09:30) Darwin</option>\r\n  <option value=\"Australia/Brisbane\">(GMT+10:00) Brisbane</option>\r\n  <option value=\"Australia/Melbourne\">(GMT+10:00) Canberra</option>\r\n  <option value=\"Pacific/Guam\">(GMT+10:00) Guam</option>\r\n  <option value=\"Australia/Hobart\">(GMT+10:00) Hobart</option>\r\n  <option value=\"Australia/Melbourne\">(GMT+10:00) Melbourne</option>\r\n  <option value=\"Pacific/Port_Moresby\">(GMT+10:00) Port Moresby</option>\r\n  <option value=\"Australia/Sydney\">(GMT+10:00) Sydney</option>\r\n```\r\n\r\nFinding the local browser's timezone with this code:\r\n\r\n```js\r\nIntl.DateTimeFormat().resolvedOptions().timeZone \r\n```\r\n\r\nReturns the value (for me) as: \"Australia/Melbourne\".\r\n\r\nGiven that the first `option` tag in this list that matches that is \"Canberra\", that option is the one that appears as selected... even though I am in the Melbourne timezone.\r\n\r\nI'd like to suggest re-mapping this time zone to:\r\n\r\n1. Prevent this option select bug from occurring\r\n2. Update the mappings for Australian timezones to be consistently the same: town on the left, TZ designation on the right. Even if the timezones are (at the moment) the same. This is the case for Darwin, Adelaide, Melbourne, Sydney, Brisbane, and Hobart... so why not Canberra too?\r\n\r\nIt looks like it has been this way for a while and nobody has noticed: https://github.com/rails/rails/commit/1d4f4cdfe22cbe4962ae8953c96bc5c70d8d4e6a.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [ ] CI is passing.\r\n\r\n",
            "number": 46333,
            "url": "https://github.com/rails/rails/pull/46333",
            "updatedAt": "2022-10-25T05:30:06Z",
            "createdAt": "2022-10-25T03:18:16Z",
            "changedFiles": 1,
            "author": {
              "login": "radar"
            }
          },
          {
            "additions": 3,
            "deletions": 3,
            "title": "Lock Puma version to 5 for 7-0-stable",
            "body": "### Motivation / Background\r\n\r\nPuma 6 has some braking changes that have been addressed to main via https://github.com/rails/rails/pull/46106\r\n\r\nThis change has not been backported to 7-0-stable branch, the current Gemfile allows to install Puma 6, locking Puma version to 5 at 7-0-stable.\r\n\r\n### Detail\r\n\r\n* This commit addresses the following error.\r\n\r\n```ruby\r\n$ git checkout 7-0-stable\r\n$ bundle update puma --conservative\r\n$ git diff\r\ndiff --git a/Gemfile.lock b/Gemfile.lock\r\nindex 5e956659ef..60caa36cad 100644\r\n--- a/Gemfile.lock\r\n+++ b/Gemfile.lock\r\n@@ -375,6 +375,10 @@ GEM\r\n... snip ...\r\n-    puma (5.5.2)\r\n+    puma (6.0.0)\r\n... snip ...\r\n$\r\n```\r\n\r\n```ruby\r\n$ cd actioncable\r\n$ bin/test test/client_test.rb -n test_server_restart\r\nRun options: -n test_server_restart --seed 65101\r\n\r\nE\r\n\r\nError:\r\nClientTest#test_server_restart:\r\nNoMethodError: undefined method `strings' for Puma::Events:Class\r\n\r\n    server = ::Puma::Server.new(rack_app, ::Puma::Events.strings)\r\n                                                        ^^^^^^^^\r\n    /home/yahonda/src/github.com/rails/rails/actioncable/test/client_test.rb:68:in `with_puma_server'\r\n    /home/yahonda/src/github.com/rails/rails/actioncable/test/client_test.rb:303:in `test_server_restart'\r\n\r\nbin/test test/client_test.rb:302\r\n\r\nFinished in 0.024000s, 41.6675 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [ ] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [ ] CI is passing.\r\n\r\n",
            "number": 46334,
            "url": "https://github.com/rails/rails/pull/46334",
            "updatedAt": "2022-10-25T14:33:24Z",
            "createdAt": "2022-10-25T12:52:51Z",
            "changedFiles": 2,
            "author": {
              "login": "yahonda"
            }
          },
          {
            "additions": 119,
            "deletions": 19,
            "title": "Add support for multi-database applications to `db:check_protected_environments` task",
            "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nSimilarly to https://github.com/rails/rails/pull/46336, this change brings the `db:check_protected_environments` task up to parity with the rest of tasks that support multi-database applications.\r\n\r\nToday, misconfiguration of non-primary databases in multi-db applications is not checked against the `ar_internal_metadata` table's `environment` row, posing a risk to production environments.\r\n\r\n### Detail\r\n\r\nSimilarly to my other PRs (https://github.com/rails/rails/pull/46097, https://github.com/rails/rails/pull/46336), we iterate through each of the relevant database configurations and re-establish `ActiveRecord::Base` using each configuration. This is safe to do since the `check_protected_environments!` method is only ever called from the `databases.rake` file/tasks.\r\n\r\n**A hidden change, but critical (for the purposes that I'm working on), that is happening here** is that database configurations with `database_tasks: false` will be excluded from the logic in this task – due to the usage of the `ActiveRecord::Base.configurations.configs_for` method, which by default has `include_hidden: false`!\r\n\r\n\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [ ] CI is passing.\r\n\r\ncc @eileencodes ",
            "number": 46340,
            "url": "https://github.com/rails/rails/pull/46340",
            "updatedAt": "2022-10-27T21:35:03Z",
            "createdAt": "2022-10-25T21:34:43Z",
            "changedFiles": 4,
            "author": {
              "login": "hkdsun"
            }
          },
          {
            "additions": 81,
            "deletions": 0,
            "title": "Introducing `where.present` and `where.absent` query methods.",
            "body": "### Motivation / Background\r\n\r\nAs discussed [here](https://discuss.rubyonrails.org/t/proposal-activerecord-support-for-exists-clause), I would like to introduce a way to create queries with the `EXISTS` clause without relying on string fragments or internal APIs.\r\n\r\n[`EXISTS` is faster than `IN` when the sub-query results is very large](https://stackoverflow.com/a/3964770), so it's common to optimize queries like that:\r\n\r\nBefore:\r\n\r\n```ruby\r\n\r\n# Slow with many authors\r\nPost.where(author: Author.all)   \r\nPost.where.not(author: Author.all)\r\n\r\n# Fast, but the syntax is awful\r\nPost.where(Author.where(\"authors.id = posts.author_id\").arel.exists)\r\nPost.where(Author.where(\"authors.id = posts.author_id\").arel.exists.not)\r\n```\r\n\r\nAfter:\r\n\r\n```ruby\r\n# Fast with many authors\r\nPost.where.present(Author.where(\"authors.id = posts.author_id\"))\r\nPost.where.absent(Author.where(\"authors.id = posts.author_id\"))    \r\n```\r\n\r\n\r\n",
            "number": 46343,
            "url": "https://github.com/rails/rails/pull/46343",
            "updatedAt": "2022-10-28T00:13:48Z",
            "createdAt": "2022-10-26T06:55:11Z",
            "changedFiles": 3,
            "author": {
              "login": "lazaronixon"
            }
          },
          {
            "additions": 18,
            "deletions": 4,
            "title": "Add nil to valid options for dependent",
            "body": "### Motivation / Background\r\n\r\n`nil` is a valid value for the `dependent` option on `has_many`, `has_one` and `belongs_to`, but the error message you got didn't specify this.\r\n\r\n### Detail\r\n\r\nThis changes what Rails sees as specified valid options for `dependent`\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why.\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [ ] ~CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.~\r\n* [ ] CI is passing.\r\n\r\n",
            "number": 46344,
            "url": "https://github.com/rails/rails/pull/46344",
            "updatedAt": "2022-10-26T13:30:51Z",
            "createdAt": "2022-10-26T09:40:55Z",
            "changedFiles": 6,
            "author": {
              "login": "omegahm"
            }
          },
          {
            "additions": 42,
            "deletions": 2,
            "title": "Fix template caching for dynamic view paths",
            "body": "### Issue\r\nAdding view paths with `prepend_view_path` or `append_view_path` _in a request context_ disables template caching for these paths and creates a memory leak.\r\n\r\n### Details\r\nWhen prepending or appending view paths, [Rails will create an ActionView::Resolver for each String or Pathname argument](https://github.com/rails/rails/blob/1562651e5fb02d7687ffe13498c0cc3aee9249f0/actionview/lib/action_view/path_set.rb#L70). Previously, these were not cached. If view paths were added in a request context (which is a common thing in a multi-tenant application), [new resolvers were created on each request](https://github.com/rails/rails/blob/1562651e5fb02d7687ffe13498c0cc3aee9249f0/actionview/lib/action_view/lookup_context.rb#L166). This effectively disabled template caching for the added view paths.\r\n\r\nFurther, it also created a memory leak, which is how we noticed this issue in the first place. It goes somewhat like this: [for each rendered template, Rails defines a method](https://medium.com/rubyinside/disassembling-rails-template-rendering-2-a99214c6fde8#43ce). This creates [immortal symbols](https://stackoverflow.com/questions/34200946/garbage-collection-of-symbols-ruby-2-2-1/34201264#34201264). Since template caching was off, each request triggered many of these method definitions, flooding memory with symbols.\r\n\r\nThis commit fixes both issues by caching dynamic view path strings as resolver instances. I believe it also fixes #14301 and resolves #22580.\r\n\r\n### Additional Information\r\n* https://makandracards.com/makandra/515345-rails-fixing-the-memory-leak-performance-issues-in-prepend_view_path\r\n* https://www.spacevatican.org/2019/5/4/debugging-a-memory-leak-in-a-rails-app/\r\n\r\n### Checklist\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n  _I have not mentioned the two issues above in the commit message, because I am not 100% sure they are related. My PR is not based on them, they just inspired the solution. If you wish, however, I will add them._\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] CI is passing.",
            "number": 46345,
            "url": "https://github.com/rails/rails/pull/46345",
            "updatedAt": "2022-10-27T05:49:07Z",
            "createdAt": "2022-10-26T13:55:40Z",
            "changedFiles": 2,
            "author": {
              "login": "codener"
            }
          },
          {
            "additions": 68,
            "deletions": 1,
            "title": "Add primary_key_default option to create table migrations",
            "body": "\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThis Pull Request has been created because I want to automatically set the `default:` argument on create table migrations to \"uuid_generate_v4()\". The primary key type on my tables are :uuid and I want to use the uuid_generate_v4() method from Postgres to generate the id values.\r\n\r\n### Detail\r\n\r\nIt adds the `primary_key_default` option on the migration generator, which allows an initializer to set the value to automatically use on all create table migrations.\r\n\r\n```ruby\r\nRails.application.config.generators do |g|\r\n  g.orm(:active_record, primary_key_type: :uuid)\r\n  g.orm(:active_record, primary_key_default: \"\\\"uuid_generate_v4()\\\"\")\r\nend\r\n```\r\n\r\n```bash\r\nrails generate migration create_books\r\n```\r\n\r\n```ruby\r\nclass CreateBooks < ActiveRecord::Migration[7.0]\r\n  def change\r\n    create_table :books, id: :uuid, default: \"uuid_generate_v4()\" do |t|\r\n\r\n      t.timestamps\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] CI is passing.\r\n\r\n",
            "number": 46353,
            "url": "https://github.com/rails/rails/pull/46353",
            "updatedAt": "2022-10-28T15:44:15Z",
            "createdAt": "2022-10-26T20:47:52Z",
            "changedFiles": 6,
            "author": {
              "login": "paulyoder"
            }
          },
          {
            "additions": 16,
            "deletions": 5,
            "title": "Update ConnectionPool docs",
            "body": "### Motivation / Background\r\n\r\nI created this Pull Request because it was not clear to me that Rails models would automatically use the connection checked-out by `.with_connection` without me explicitly passing the connection to them.  This led to me digging in to this a bit more.  I think the docs could have been more explicit on this point, so I attempted to improve them.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the docs to be more explicit about the behavior of `.with_connection`, when connections will be checked out and checked back into the connection pool, and what happens if a connection has already been checked out on the current thread.\r\n\r\n### Additional information\r\n\r\nN/A\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] CI is passing.\r\n",
            "number": 46362,
            "url": "https://github.com/rails/rails/pull/46362",
            "updatedAt": "2022-10-27T16:02:30Z",
            "createdAt": "2022-10-27T14:36:08Z",
            "changedFiles": 1,
            "author": {
              "login": "nycdotnet"
            }
          },
          {
            "additions": 68,
            "deletions": 4,
            "title": "Invalidate transaction as early as possible",
            "body": "### Motivation / Background\r\n\r\nThis PR changes the way of invalidating a transaction for two reasons\r\n- Avoid `Mysql2::Error: SAVEPOINT active_record_%n% does not exist` error being raised when application wrongly handles `ActiveRecord::Deadlocked` exception by manually trying to rollback transaction that has already been rolled back by the database itself\r\n- Invalidating transaction as early as possible is a better design as it moves the transaction in a correct state as soon as possible so other parts of the framework can rely on that. I'll provide an example below\r\n\r\n### Detail\r\n\r\n- The main motivation behind this chance is to reduce the number of `Mysql2::Error: SAVEPOINT active_record_%n% does not exist`. I have to admit that this error is happening mainly because of the wrong design of an application or specifically transaction handling in an application. The test shows a simplified version of the design, generally it looks like: 1. start a transaction 2. define general `rescue` in the transaction block which basically rescues anything that inherits from `StandardError` 3. handle the exception by logging/submitting stats/ etc and raise an `ActiveRecord::Rollback` or basically any exception that causes framework to issue a `ROLLBACK` statement leading to a `Mysql2::Error` because there is nothing to rollback on the db side but framework can't know this just yet and the invalidation is only about to happen here \r\nhttps://github.com/rails/rails/blob/c8315a96f962b0702062197c5a37d6d0a4bc9bc8/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb#L459-L462\r\nwhich is too late and happens after we do our own `rescue`-`raise` flow causing the `ROLLBACK` to be issued without necessity\r\nIt the transaction was invalidated earlier, as proposes this PR, the rollback would have been ignored:\r\nhttps://github.com/rails/rails/blob/c8315a96f962b0702062197c5a37d6d0a4bc9bc8/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb#L276-L278\r\nThis may sound as a purely application problem and the simplicity of the test may hide the fact that in reality applications are much more complex and those steps 1. open transaction 2. rescue 3. raise/rollback are widely spread and it's not always easy to refactor especially with no proper domain context or even realize that as a developer that you are wrongly handling transactions.\r\nI consider the knowledge about how deadlock behaves in mysql and how properly handle exceptions within a transaction to be closer to an advanced level which in my opinion justifies the proposal of making framework a bit smarter and a bit forgiving so it can prevent wrong thing from happening. Especially because we already, by design, do not issue `ROLLBACK` statements for a transaction with an invalidated state. This PR just helps to handle it in the same way in more cases.\r\nEven if we can't consider my first point as a sufficient argument, I have the second one:\r\n\r\n- Second motivation for this PR is that I strongly believe that invalidating a transaction as early as possible is a better design and \"just makes sense\". As I mentioned above, framework already makes certain decisions based on the transaction state so keeping the state as correct as possible is the right thing. \r\nFor example after properly invalidating transaction state, we should be able to get rid of the following check - \r\nhttps://github.com/rails/rails/blob/999c58d41fe4726ef2b90910cea934f0593aad49/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb#L1021\r\nSpecifically I strongly believe that `savepoint_errors_invalidate_transactions?` check should only be used for deciding whether a transaction should be invalidated or not. If the check is used in a different context it only means that we are checking for something by implication and we lack a more specific check. So I'll be also proposing refactoring this check to replace it with something like (pseudo code) `do_not_retry if current_transaction && current_transaction.state.invalidated?` which will basically make this comment redundant as the code will be self-explanatory\r\nhttps://github.com/rails/rails/blob/999c58d41fe4726ef2b90910cea934f0593aad49/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb#L1019-L1020\r\n\r\n\r\n### What's next\r\n\r\n- There is also a case when `COMMIT` statement can be ignored as well for an invalidated transaction. I need to double check it and I'll prepare a PR if it's still an issue\r\n- As I mentioned above, I'd like to simplify this check https://github.com/rails/rails/blob/999c58d41fe4726ef2b90910cea934f0593aad49/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb#L1021 as after this PR it should be unnecessary to perform all three checks as we can simply check the transaction state\r\n\r\n### Checklist\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [ ] CI is passing.\r\n\r\n",
            "number": 46367,
            "url": "https://github.com/rails/rails/pull/46367",
            "updatedAt": "2022-10-28T16:44:31Z",
            "createdAt": "2022-10-27T22:12:37Z",
            "changedFiles": 4,
            "author": {
              "login": "nvasilevski"
            }
          },
          {
            "additions": 1,
            "deletions": 0,
            "title": "Fix flaky migrations test",
            "body": "Flaky test - https://buildkite.com/rails/rails/builds/90646#01841fca-9efc-47c8-96f3-2490eee66714\r\n\r\nTo reproduce locally:\r\n```sh\r\ncd activerecord\r\nSEED=56617 rake sqlite3:test TESTOPTS=\"--name='/test_migrate_using_empty_scope_and_verbose_mode|test_understands_migrations_created_out_of_order/'\"\r\n```",
            "number": 46374,
            "url": "https://github.com/rails/rails/pull/46374",
            "updatedAt": "2022-10-29T20:30:34Z",
            "createdAt": "2022-10-28T22:29:02Z",
            "changedFiles": 1,
            "author": {
              "login": "fatkodima"
            }
          },
          {
            "additions": 39,
            "deletions": 0,
            "title": "Define a predicate method for boolean attributes",
            "body": "<!--\r\nThanks for contributing to Rails!\r\n\r\nPlease do not make *Draft* pull requests, as they still send\r\nnotifications to everyone watching the Rails repo.\r\n\r\nCreate a pull request when it is ready for review and feedback\r\nfrom the Rails team :).\r\n\r\nIf your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nAbout this template\r\n\r\nThe following template aims to help contributors write a good description for their pull requests.\r\nWe'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.\r\n\r\nFeel free to discard it if you need to (e.g. when you just fix a typo). -->\r\n\r\n### Motivation / Background\r\n\r\n<!--\r\nDescribe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?\r\nIf you are fixing a specific issue, include \"Fixes #ISSUE\" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.\r\n-->\r\n\r\nThe `ActiveModel::Attributes` API allows us to define different types of attributes.\r\n\r\nIt handles type casting, default values, and defines read/write methods.\r\n\r\nTypically when defining a boolean attribute, you will often define the respective predicate method.\r\n\r\nFor example:\r\n\r\n```ruby\r\nclass Person\r\n  include ActiveModel::Attributes\r\n\r\n  attribute :loves_rails, :boolean\r\n\r\n  def loves_rails?\r\n    !!loves_rails\r\n  end\r\nend\r\n\r\nperson = Person.new\r\n\r\nperson.loves_rails  # => nil\r\nperson.loves_rails? # => false\r\n\r\nperson.loves_rails = true\r\n\r\nperson.loves_rails? # => true\r\n```\r\n\r\nThis Pull Request has been created because it would be useful for boolean \r\nattributes to automatically have its respective predicate method defined.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the `attribute` method in `ActiveModel::AttributeRegistration`, \r\nso that it defines `attribute?` methods for attributes with a boolean type.\r\n\r\n### Additional information\r\n\r\n<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [x] CI is passing.\r\n\r\n",
            "number": 46376,
            "url": "https://github.com/rails/rails/pull/46376",
            "updatedAt": "2022-10-29T09:21:09Z",
            "createdAt": "2022-10-29T09:04:31Z",
            "changedFiles": 3,
            "author": {
              "login": "cpjmcquillan"
            }
          },
          {
            "additions": 3,
            "deletions": 1,
            "title": "Fix composed_of freezing",
            "body": "composed_of values should be automatically frozen by Active Record. This worked correctly when assigning a new value object via the writer, but objects instantiated based on database columns were NOT frozen.\r\n\r\nThe fix consists of calling #freeze on the cached value object when it's added to the aggregation cache in #reader_method.\r\n\r\n### Motivation / Background\r\n\r\nThis Pull Request has been created because [the documentation for `composed_of`](https://edgeapi.rubyonrails.org/classes/ActiveRecord/Aggregations/ClassMethods.html) mentions the value object is frozen **and** it's frozen after assigning it via the writer (e.g. `customer.address = ...`) but it is **not** frozen when instantiated after fetching from the database (e.g. `customer = Customer.first; customer.address` is **not** frozen).\r\n\r\n### Detail\r\n\r\nThis Pull Request changes the fix consists of calling `freeze` when adding the object to `@aggregation_cache` upon reading. An assertion was added to the test suite to detect the presence of the bug.\r\n\r\n### Checklist\r\n\r\nBefore submitting the PR make sure the following are checked:\r\n\r\n* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.\r\n* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`\r\n* [x] Tests are added or updated if you fix a bug or add a feature.\r\n* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.\r\n* [ ] CI is passing.\r\n\r\n",
            "number": 46377,
            "url": "https://github.com/rails/rails/pull/46377",
            "updatedAt": "2022-10-29T13:43:43Z",
            "createdAt": "2022-10-29T13:43:31Z",
            "changedFiles": 2,
            "author": {
              "login": "gregnavis"
            }
          },
          {
            "additions": 12,
            "deletions": 0,
            "title": "Add link to external editor to rescue view",
            "body": "This is a somewhat trivial diff.  Currently, when an exception is thrown, a page is rendered and part of the page has the paths and line numbers from the exception stack.  The lines are clickable and when clicked, the upper section changes to show more context of the line in the original source code.\r\n\r\nThe proposed change is to add an additional link whose text is the Unicode link symbol after the existing link.  The more common glyph was rejected by Unicode.\r\n\r\nThe href for the link symbol comes from Ruby code that first checks, at render time, to see if ActionDispatch::DebugView#ext_editor is defined.  If it is, it is called passing the \"frame\".  Otherwise, ActionDispatch::DebugView#int_editor is called.\r\n\r\nint_editor creates a URL using the `file:` scheme.  While most browsers won't follow the link, it will show to the developer what is possible.  My example of ext_editor creates a URL using the `emacs:` scheme.\r\n\r\nI've added a tool tip to try and tell the developers how they can configure the URL to invoke their favorite editor.\r\n\r\nI thought the approach of checking to see if a method is defined and calling it would be preferred to having the user redefine the definition of an existing method.\r\n\r\nAnother piece of work to do would be to add something like the sample I have to the templates so that config/initializers/debug_view.rb would be created when the Rails app is created.\r\n\r\nHaving both links, the currently existing link that shows the code snippets and the new link that opens the file in the external editor, gives the users the best of both worlds.  They can view in the browser what happened and then click to get them placed in their favorite editor at the line number for the issue.\r\n\r\nThe key here is \"their favorite editor\" can be customized to their liking via the ext_editor method.\r\n\r\n### Motivation / Background\r\n\r\nThis Pull Request has been created because adding a link to the exception rescue page to the files and lines that are in the exception stack will help the developer edit the area that caused the fault.\r\n\r\n### Detail\r\n\r\nThis Pull Request changes:\r\nM\tactionpack/lib/action_dispatch.rb\r\nM\tactionpack/lib/action_dispatch/middleware/debug_view.rb\r\nM\tactionpack/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb\r\nA     actionpack/lib/action_dispatch/locale/en.yml\r\n\r\n### Additional information\r\n\r\nMy example for what a developer can add to config/initializers/debug_view.rb:\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nmodule ActionDispatch\r\n  class DebugView < ActionView::Base # :nodoc:\r\n    def ext_editor(frame)\r\n      frame[:trace].sub(/([^:]+):([0-9]+)(:.*)?/, 'emacs:///Users/pedz/Source/hatred/\\\\1#\\\\2')\r\n    end\r\n  end\r\nend\r\n```\r\n",
            "number": 46378,
            "url": "https://github.com/rails/rails/pull/46378",
            "updatedAt": "2022-10-29T17:50:11Z",
            "createdAt": "2022-10-29T17:50:08Z",
            "changedFiles": 4,
            "author": {
              "login": "pedz"
            }
          },
          {
            "additions": 22,
            "deletions": 21,
            "title": "Fix flakey tests due to leaking migration state",
            "body": "Follow-up to #46097.\r\n\r\nPrior to #46097, `PendingMigrationsTest` created an in-memory database to run migrations on.  This prevented those migrations from affecting other tests.  #46097 switched to an on-disk database to test pending migrations for databases other than the current `ActiveRecord::Base.connection` database.  However, #46097 used the fixture database that other tests also use, causing those other tests to sometimes fail.  For example:\r\n\r\n  ```\r\n  $ cd activerecord\r\n  $ ARCONN=sqlite3 bin/test --seed 56617 -n '/test_understands_migrations_created_out_of_order|test_migrate_using_scope_and_verbose_mode|test_migrate_using_empty_scope_and_verbose_mode/'\r\n\r\n  ...\r\n\r\n  Failure:\r\n  ActiveRecord::DatabaseTasksMigrateScopeTest#test_migrate_using_empty_scope_and_verbose_mode [/rails/activerecord/test/cases/tasks/database_tasks_test.rb:1026]:\r\n  Expected \"\" to include \"migrating\".\r\n\r\n  ...\r\n\r\n  Failure:\r\n  ActiveRecord::DatabaseTasksMigrateScopeTest#test_migrate_using_scope_and_verbose_mode [/rails/activerecord/test/cases/tasks/database_tasks_test.rb:990]:\r\n  Expected \"No migrations ran. (using mysql scope)\\n\" to include \"migrating\".\r\n  ```\r\n\r\nThis commit changes `PendingMigrationsTest` to use isolated on-disk databases.\r\n\r\nCloses #46374.\r\n\r\n---\r\n\r\nExample failure: https://buildkite.com/rails/rails/builds/90646#01841fca-9efc-47c8-96f3-2490eee66714/1050-1060\r\n",
            "number": 46380,
            "url": "https://github.com/rails/rails/pull/46380",
            "updatedAt": "2022-10-29T20:30:05Z",
            "createdAt": "2022-10-29T20:30:01Z",
            "changedFiles": 1,
            "author": {
              "login": "jonathanhefner"
            }
          },
          {
            "additions": 19,
            "deletions": 6,
            "title": "Add `ActionMailer.deprecator`",
            "body": "This commit adds `ActionMailer.deprecator` and replaces all usages of `ActiveSupport::Deprecation.warn` in `actionmailer/lib` with `ActionMailer.deprecator`.\r\n\r\nAdditionally, this commit adds `ActionMailer.deprecator` to `Rails.application.deprecators` so that it can be configured via settings such as `config.active_support.report_deprecations`.\r\n",
            "number": 46381,
            "url": "https://github.com/rails/rails/pull/46381",
            "updatedAt": "2022-10-29T21:01:13Z",
            "createdAt": "2022-10-29T20:59:26Z",
            "changedFiles": 7,
            "author": {
              "login": "jonathanhefner"
            }
          },
          {
            "additions": 2,
            "deletions": 2,
            "title": "Fix \"possibly useless use of a constant\" warnings",
            "body": "This fixes two warnings like the following when running `rails/railties/test/application/initializers/frameworks_test.rb`:\r\n\r\n  ```\r\n  warning: possibly useless use of a constant in void context\r\n  ```\r\n\r\n---\r\n\r\nExample warning: https://buildkite.com/rails/rails/builds/90621#01841b72-5e2c-4723-b370-da4c8daf088f/1089-1091\r\n",
            "number": 46382,
            "url": "https://github.com/rails/rails/pull/46382",
            "updatedAt": "2022-10-29T21:30:54Z",
            "createdAt": "2022-10-29T21:30:51Z",
            "changedFiles": 1,
            "author": {
              "login": "jonathanhefner"
            }
          }
        ],
        "totalCount": 339
      }
    }
  }
}